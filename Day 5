{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "next-day-5",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -3088,
        208
      ],
      "id": "3f8d7fe2-44a5-4285-b712-29335c7f9ad2",
      "name": "Webhook",
      "webhookId": "2df5f55f-02a7-43dc-9d5e-3ac12abf6ab3"
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "id": "42ed47b8-1388-45b6-8830-982bb900b1e1",
      "name": "Wait 1 Minute",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -1728,
        256
      ],
      "webhookId": "203a8dd6-e8c1-4d7b-980f-d29471784447",
      "notes": "Day 0: Wait 1 minute after sequence initialization"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "6fa32f27-7685-4db6-8f35-e4dc214701a8",
      "name": "Check If Booked Day 0",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1072,
        240
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1376,
        240
      ],
      "id": "a8bb4271-9956-4708-ae62-b472507bc214",
      "name": "Merge"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_5fc6a2d55ae7a6bcf3d547d1dfa7a523d0544d669a6a6787"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_3501k3yek057fzwtc3h76889sp2s"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_0401k3yetaz3e93vrdy1e42jvxv4"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        256
      ],
      "id": "272e468d-7c25-4cf3-aa0e-b39a820841b1",
      "name": "Eleven-lab call 1"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "id": "a7208af7-4ccf-433b-ac28-92956a20d252",
      "name": "Wait 2 Minutes",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -672,
        944
      ],
      "webhookId": "ec5b365e-e056-4d31-a6b7-7879c6d50700",
      "notes": "Wait 2 minutes between call and voicemail/SMS"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1807673988,
          "mode": "list",
          "cachedResultName": "Outbound Calls",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=1807673988"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "To Number",
              "lookupValue": "={{ $('Get a contact If they booked').item.json.phone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -2448,
        544
      ],
      "id": "7115d42e-649a-4034-a98d-0ef38bea28e2",
      "name": "Get Summary of transcript"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\nThis is actual transcript day 0:{{ $json['Transcript Day 0'] }}.\n\nThis is summary 0:{{ $json['Summary Day 0'] }}\nNow time: {{ $now }}\n\n",
        "messages": {
          "messageValues": [
            {
              "message": "SYSTEM PROMPT:\n\nYOU ARE AN EXPERT AI CALL CLASSIFICATION AGENT TRAINED TO ANALYZE OUTBOUND CALL TRANSCRIPTS AND ROUTE THEM INTO FIVE SPECIFIC CATEGORIES FOR n8n.\n\n### INSTRUCTIONS ###\n- Carefully read the call transcript.\n- The **current time** is provided as `now_time` in ISO format (e.g., 2025-08-28T14:46:39.173+03:00). Use this as the reference for all future reminders.\n- Classify each transcript into **exactly one** of these categories:\n  1. REMINDER\n  2. LEAD-OUT (opt-out)\n  3. NOT-PICKED\n  4. BOOKED\n\n---\n\n### CATEGORIES AND RULES ###\n\n1. **REMINDER**\n- Triggered when the client requests a future follow-up.\n- Examples: \"remind me later\", \"call me tomorrow morning\", \"call me in the afternoon\", \"send me an email reminder\", \"text me a reminder\".\n- Rules:\n  - Always return `\"classification\": \"reminder\"`.\n  - Include `\"reminder_type\"` as `\"call\"`, `\"sms\"`, or `\"email\"`:\n    - `\"call\"` → user says \"call me back\" or \"call me again\"\n    - `\"sms\"` → user says \"text me\" or \"send me an sms\"\n    - `\"email\"` → user says \"email me\"\n    - Default to `\"sms\"` if not specified\n  - Include `\"time\"` as an **ISO datetime in the future**, using the provided `now_time` as reference:\n    - \"remind me in 5 hours\" → `{{ $now.plus({ hours: 5 }).toISO() }}`\n    - \"remind me tomorrow morning\" → `{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}`\n    - \"call me this afternoon\" → pick the **next future afternoon hour** relative to `now_time`, e.g., `{{ $now.set({ hour: 15, minute: 0, second: 0 }).toISO() }}`\n  - If no time is specified, return `\"time\": null`.\n\n2. **LEAD-OUT**\n- Triggered when the client explicitly does NOT want further contact.\n- Keywords: \"stop\", \"don’t call me again\", \"remove me from your list\", \"unsubscribe\", \"never call again\", \"not interested\".\n- Output: `\"classification\": \"lead-out\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n3. **NOT-PICKED**\n- Triggered if the call was not answered, when the transcript is null, went to voicemail, or user is unavailable.\n- Keywords: \"no answer\", \"not available\", \"didn’t pick\", \"busy tone\", \"left a voicemail\".\n- Output: `\"classification\": \"not-picked\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n4. **BOOKED**\n- Triggered if the client agrees to a meeting or appointment.\n- Examples: \"Yes, let's book that\", \"I'll take the meeting\", \"book it for me now\".\n- Output: `\"classification\": \"booked\"`,  `\"booking_type\": sms or email`, `\"time\": null`, `\"reminder_type\": null`.\n- Rules:\n- Include `\"booking_type\"` as  `\"sms\"`, or `\"email\"`:\n    - `\"sms\"` → user says \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - `\"email\"` → user says \"email me the booking link \", \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - Default to `\"email\"` if not specified\n---\n\n### EDGE CASES ###\n- If the user says both \"remind me\" and \"don't call me again\", **prioritize LEAD-OUT**.\n- If the user agrees to a meeting, **prioritize BOOKED**.\n\n---\n\n### OUTPUT FORMAT ###\nAlways return exactly this JSON structure (valid JSON, no comments):\n\n{\n  \"classification\": \"reminder | lead-out | not-picked | booked\",\n  \"time\": \"ISO datetime format if reminder includes a time, else null\",\n  \"reminder_type\": \"call | sms | email, else null\"\n  \"booking_type\": \"sms | email, else null,\n}\n\n**Notes:**\n- `\"time\"` must be **null** if not a reminder or if no time specified.\n- `\"reminder_type\"` must be **null** if not a reminder.\n- Do not include extra text, explanations, or formatting outside the JSON.\n- Use the provided `now_time` as the reference for all dynamic time calculations.\n- Here’s a recommended table in 12-hour format (LA time):\n\nPart of Day\tStarts At\tEnds At\tNotes\nMidnight\t12:00 AM\t12:59 AM\tNot suitable for clinic reminders\nEarly Morning\t6:00 AM\t7:59 AM\tBefore business hours; some early risers\nMorning\t8:00 AM\t11:59 AM\tClinic opening hours; ideal for reminders\nNoon\t12:00 PM\t12:59 PM\tMidday break; okay for reminders\nAfternoon\t1:00 PM\t4:59 PM\tActive clinic hours; good for reminders\nEvening\t5:00 PM\t7:00 PM\tClosing hours; okay for last call reminders\nNight\t7:01 PM\t11:59 PM\tNot ideal; outside typical business hours\n\nNotes / Adjustments for MedSpas & Clinics:\n\nAvoid reminders during very early morning (1–5:59 AM) or late night (after 7 PM).\n\nDefault morning reminders → 9:00 AM\n\nDefault afternoon reminders → 2:00 PM\n\nDefault evening reminders → 6:00 PM\n---\n\n### EXAMPLES ###\n\n**Example 1:**  \nTranscript: \"Can you call me tomorrow morning at 9am?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"time\": \"{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}\",\n  \"reminder_type\": \"call\"\n}\n\n**Example 2:**  \nTranscript: \"Please don’t contact me again via SMS.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"lead-out\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 3:**  \nTranscript: \"The number you have dialed is not available.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"not-picked\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n\n**Example 5:**  \nTranscript: \"That sounds good, I'll take that meeting, send booking link via email\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"booked\",\n  \"booking_type\": email,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 6:**  \nTranscript: \"Can you send me an email reminder next week?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"booking_type\": null,\n  \"time\": \"{{ $now.plus({ days: 7 }).toISO() }}\",\n  \"reminder_type\": \"email\"\n}\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -2096,
        544
      ],
      "id": "caa888d5-ed59-4aa3-b4ea-ff37af95f3fb",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -2112,
        752
      ],
      "id": "6cba049d-5c2c-4c66-acb0-a9e5855721cf",
      "name": "OpenRouter Chat Model"
    },
    {
      "parameters": {
        "operation": "delete",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        -1072,
        736
      ],
      "id": "d7b3fe80-bdcb-43f4-92c1-732bd7ea52ac",
      "name": "Delete a contact"
    },
    {
      "parameters": {
        "operation": "update",
        "contactId": "uh8ZXbxgiiPqAwxCXb7b",
        "updateFields": {
          "tags": "={{ $json.tags.concat(['pause-reminder']) }}"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        -944,
        496
      ],
      "id": "851d6bcf-c54f-47e4-84f9-bbb2b3ec40ee",
      "name": "Update a contact tag pause-reminder"
    },
    {
      "parameters": {
        "resume": "specificTime",
        "dateTime": "={{ $now.plus({ days: 2 }).set({ hour: 18, minute: 0, second: 0 }).toISO() }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -768,
        496
      ],
      "id": "7d4701b4-3947-49af-a358-c57104f45755",
      "name": "Wait for desired time",
      "webhookId": "90a4e27b-c45b-4ee8-a0bc-2a62c3b13d19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3b7ab24a-966e-469e-998c-4f024b85b617",
              "leftValue": "={{ $('Code1').item.json.reminder_type }}",
              "rightValue": "call",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -352,
        496
      ],
      "id": "c9b1d21a-ee1b-43f3-b469-45ce6da9c637",
      "name": "If reminder is for Call or Email + SMS"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        544,
        496
      ],
      "id": "4b1b6b4f-b60d-4596-927a-133002b10560",
      "name": "Eleven-lab calls for reminder"
    },
    {
      "parameters": {
        "subject": "Your appointment reminder – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},\n\nAs you requested during our recent call, here’s your reminder from Yellow Rock House.\nYou can book your appointment anytime using the link below:\n\n👉 Book Your Appointment Here\n\nWe look forward to seeing you soon!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        528,
        688
      ],
      "id": "a00b6f0e-128c-4292-bb71-1ae5f4f17f3a",
      "name": "Send a reminder email",
      "webhookId": "c7b5aa45-82c8-47e0-9c9b-ab9abbf6cf8a"
    },
    {
      "parameters": {
        "message": "=Hi {{leadName}}, this is a reminder from Yellow Rock House. You can book your appointment anytime here: {{bookingLink}}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        720,
        688
      ],
      "id": "4bf721f1-3c2e-429f-a8e8-bac574d84d4e",
      "name": "Send an reminder sms"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "reminder",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "620d8e74-2eeb-4b51-b590-bc64ff01c404"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reminder"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "69a956dc-77a2-4cc4-8127-a5420ab4331f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "lead-out",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "lead-out"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "817d783e-7227-415d-b1cb-6282f2a92467",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "not-picked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "not-picked"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b13a6c6c-f0fe-41c8-8ddf-df03b1a6f44f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "booked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "booked"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1504,
        512
      ],
      "id": "1969bd44-2890-42a7-92ed-22ccf91e7ab8",
      "name": "Switch1"
    },
    {
      "parameters": {
        "jsCode": "let aiText = null;\n\n// Try multiple possible locations for AI output\nif (items[0].json.response?.generations?.[0]?.[0]?.text) {\n    aiText = items[0].json.response.generations[0][0].text;\n} else if (items[0].json.text) {\n    aiText = items[0].json.text;\n} else {\n    throw new Error(\"AI output not found\");\n}\n\n// Remove any ```json or ``` markdown\naiText = aiText.replace(/```json\\s*/g, '').replace(/```/g, '').trim();\n\n// Try parsing JSON\nlet parsed = null;\ntry {\n    parsed = JSON.parse(aiText);\n} catch (err) {\n    throw new Error(\"Failed to parse AI JSON output\");\n}\n\n// If the AI returned the object under \"output\", use that; otherwise fallback\nconst output = parsed.output ?? parsed;\n\n// Ensure all required fields exist\nconst classification = output.classification ?? null;\nconst time = output.time ?? null;\nconst reminder_type = output.reminder_type ?? null;\nconst booking_type = output.booking_type ?? null; // <-- added field\n\n// Return properly formatted n8n object\nreturn [\n    {\n        json: {\n            classification,\n            time,\n            reminder_type,\n            booking_type // <-- included in output\n        }\n    }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1744,
        544
      ],
      "id": "916de5e3-9ad7-484e-bb1b-75793d158aa3",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        -1120,
        496
      ],
      "id": "01b5e7e5-9fbf-46d7-97fa-970f3111f50a",
      "name": "Get a contact17"
    },
    {
      "parameters": {
        "subject": "=Client Removal Update – {{clientName}} (Yellow Rock House)",
        "emailType": "text",
        "message": "=Hi Team,  \n\nDuring our recent outbound call, {{clientName}} requested to be removed from further communication. As per their request, we have now removed them from our contact list.  \n\nPlease ensure that:  \n - No further calls or follow-ups are made to this client.  \n - All records in CRM/n8n are updated accordingly.  \n - Any scheduled reminders or campaigns related to this client are canceled.  \n\nThanks for keeping everything up to date and respecting client preferences.  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -816,
        736
      ],
      "id": "d575fa37-e38a-427f-9dd1-c1eba0ef73b2",
      "name": "Send a message",
      "webhookId": "55b50f56-8e90-4d7b-acef-9dd4f6ce08f7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        -2080,
        1184
      ],
      "id": "8cd49e26-e05b-4393-8052-1632f843e5c6",
      "name": "Thanks for booking sms"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f9ccb6d-d137-48eb-8e64-10511fa5ec12",
              "leftValue": "={{ $json.booking_type }}",
              "rightValue": "sms",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2384,
        1216
      ],
      "id": "6b195fd7-1f2b-492b-9623-5a4f9db8b057",
      "name": "If1"
    },
    {
      "parameters": {
        "subject": "=Booking link as promised – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},  \n\nThank you for agreeing to book your appointment with Yellow Rock House. \nYou can confirm your slot anytime using the link below:  👉 Book Your Appointment Here  \n\nWe appreciate your time and look forward to seeing you soon!  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -2080,
        1408
      ],
      "id": "d076e0d4-c998-4236-a4db-1992c6cdc68d",
      "name": "Send a message3",
      "webhookId": "abda3e9f-8b31-419a-9e49-84b4796d630c"
    },
    {
      "parameters": {
        "subject": "=New Lead Ready to Book – {{leadName}}",
        "emailType": "text",
        "message": "=Hi Team,\n\nWe have a new lead who has agreed on the call to book an appointment with Yellow Rock House.\n\nLead Name: {{leadName}}\nBooking Link: {{bookingLink}}\n\nPlease make sure to follow up and assist them promptly.\n\nThanks for your attention!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1504,
        1296
      ],
      "id": "131c778f-ef62-421f-900f-19d8ef965b49",
      "name": "Notifying Team",
      "webhookId": "6385279f-f8d4-4a19-a7d7-c040936992c4"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Lead data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Reminder": "yes",
            "Phone": "={{ $json.phone }}"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Contact ID",
              "displayName": "Contact ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Clinic Name",
              "displayName": "Clinic Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Time spam",
              "displayName": "Time spam",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Reminder",
              "displayName": "Reminder",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Follow up day",
              "displayName": "Follow up day",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -592,
        496
      ],
      "id": "bfcf113c-8ff5-4f66-8ed1-da13aaa09c72",
      "name": "Last Conversation"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        96,
        480
      ],
      "id": "d33d376a-86a0-4442-babc-f59ca3c620cf",
      "name": "Get a contact"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        96,
        672
      ],
      "id": "4360f4ce-694f-4335-bc0a-704c370ec120",
      "name": "Get a contact4"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "8428bc42-b43d-4096-8789-b169ebd79418",
      "name": "Check If Booked Day 1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        304,
        480
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "f3d92b46-ccf0-4ed6-92ea-9caa00c7c148",
      "name": "Check If Booked Day 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        272,
        672
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "amount": 20,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "cd2ebfa7-c99d-4228-8db4-dd951e0d813a",
      "name": "Wait",
      "webhookId": "ce889f13-9f0e-467a-9768-c741c6daab0a"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -816,
        1248
      ],
      "id": "4a02f109-ef2c-4aca-a4cd-d0b8fc5655e5",
      "name": "Send a message2",
      "webhookId": "12ddcc4a-222a-4c5f-842a-a9d425c632b0"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -464,
        944
      ],
      "id": "b4b38f75-0e08-42cc-a3c9-b6ff0b5d75f5",
      "name": "Get transcript to check"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9348d1fa-b980-4ebf-a773-8ea461b73f76",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -256,
        944
      ],
      "id": "9be808a2-e774-484f-a10a-26ef6248ff19",
      "name": "If transcript  is empty"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d65c0a3-c3e1-430b-a9e3-661f26df93c0",
              "leftValue": "={{ $json.success }}",
              "rightValue": "True",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -912,
        960
      ],
      "id": "7f2ead68-a898-4d8f-8adb-0bc75dbf6c51",
      "name": "If call success"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68b92b4c-3227-452a-889d-5b66ef59fe9c",
              "name": "Name",
              "value": "Bilal",
              "type": "string"
            },
            {
              "id": "99726aa9-fae7-4b9f-aa29-3f5c913daa20",
              "name": "Phone",
              "value": "+966576908563",
              "type": "string"
            },
            {
              "id": "229a07d4-981a-4dc2-83eb-0b3ed761b83d",
              "name": "Voicemail",
              "value": "1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -16,
        928
      ],
      "id": "3ae7792d-1211-4279-90f0-46447f885a04",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "from": "+16812026276",
        "to": "+18777804236",
        "message": "=Hi! 👋 In case if you miss the link, here is the link:\n\nhttps://api.leadconnectorhq.com/widget/booking/W8QcIllkRPKyS76yvPEZ\n\nPlease book a time that works for you using the link.\n\nLooking forward to connecting with you!",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        -368,
        1216
      ],
      "id": "90c0e60d-328d-4fcb-afeb-ff511934c8d4",
      "name": "Send an SMS Booking link sms1"
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        608,
        928
      ],
      "id": "a1538afe-fed6-497d-b0c0-9ccd1675d264",
      "name": "Wait1",
      "webhookId": "a075a807-cc12-48c9-bdf1-009801e245d4"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "contact_id",
              "value": "=4b6pAJRlE7IH539DZZBq"
            },
            {
              "name": "firstName",
              "value": "={{ $json.body.first_name }}"
            },
            {
              "name": "phone",
              "value": "={{ $json.body.phone }}"
            },
            {
              "name": "sequence_day",
              "value": "0"
            },
            {
              "name": "booking_link",
              "value": "https://bit.ly/3A51SCONNECT"
            }
          ]
        },
        "options": {}
      },
      "id": "378e9431-1f4d-496e-b50e-23030536eed4",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2080,
        256
      ],
      "notes": "Initialize tracking variables for 14-day AI call sequence"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=41zAmWMqvFwZ8VVaEfG9",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        -1536,
        32
      ],
      "id": "1c96acde-b10b-4544-a462-6ae8386e3e02",
      "name": "Get a contact If they booked"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Follow up day": "Day 2",
            "Contact ID": "={{ $json.id }}"
          },
          "matchingColumns": [
            "Contact ID"
          ],
          "schema": [
            {
              "id": "Contact ID",
              "displayName": "Contact ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Clinic Name",
              "displayName": "Clinic Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time spam",
              "displayName": "Time spam",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Follow up day",
              "displayName": "Follow up day",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -752,
        256
      ],
      "id": "38f69d07-d725-4422-9644-dd4b9be03c50",
      "name": "Add the follow up day 0 in column"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d65c0a3-c3e1-430b-a9e3-661f26df93c0",
              "leftValue": "={{ $json.success }}",
              "rightValue": "True",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -176,
        256
      ],
      "id": "b893f0f3-64e2-4a9c-9bbe-765cd3daeea7",
      "name": "If Call Success or Not"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        144,
        272
      ],
      "id": "9519783b-f50f-4619-8e1d-25eb13b7c6c3",
      "name": "Send a message to notify team of failur",
      "webhookId": "12ddcc4a-222a-4c5f-842a-a9d425c632b0"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        752,
        496
      ],
      "id": "4a6ca743-b233-4aa8-8b46-e55f6927c089",
      "name": "Remove pause-reminder tag from contact"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        944,
        720
      ],
      "id": "a8e2c81b-5b9c-483b-96ae-902aad13a496",
      "name": "Remove pause-reminder tag from contact1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1088,
        960
      ],
      "id": "a671fea7-7804-4e03-954d-da09d82e2c54",
      "name": "Eleven-lab outbound call 2"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function Node - Schedule for 4:30 PM LA time\n\nconst now = new Date();\n\n// Target = today at 4:30 PM\nlet target = new Date(now);\ntarget.setHours(8, 30, 0, 0); // 16:30 = 4:30 PM local\n\n// If it's already past 4:30 PM today → move to tomorrow\nif (now >= target) {\n  target.setDate(target.getDate() + 1);\n}\n\n// shouldWait = true if we're still before target time today\nconst shouldWait = now < target;\n\nreturn [\n  {\n    json: {\n      shouldWait, // true or false\n      currentTime: now.toLocaleString('en-US', { timeZone: 'America/Los_Angeles' }),\n      nextTarget: target.toISOString(), // ISO string for Wait node\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1808,
        928
      ],
      "id": "a6b0a7c1-5bcd-482c-bca6-94f400e73953",
      "name": "Code To Check Evening Wait"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1168,
        496
      ],
      "id": "0db0e60a-9e89-4f5d-a694-1cddceccd3c8",
      "name": "HTTP Request for Day "
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1264,
        720
      ],
      "id": "5d4b7409-8174-47f9-a2cc-cb4f0acb2480",
      "name": "HTTP Request for Day 2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -48,
        1216
      ],
      "id": "4e70bfbc-941e-432c-8946-3c093cf54571",
      "name": "HTTP Request for Day 4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day-2",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        480,
        240
      ],
      "id": "0e9ad807-708a-4408-997d-1132d9601040",
      "name": "HTTP Request for Day 6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/hooks/6YFcDHnhN2DTQoFcYZF3/webhook-trigger/50125141-a71b-45db-95e7-ab8334585df7",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=Name",
              "value": "={{ $json.Name }}"
            },
            {
              "name": "Phone",
              "value": "={{ $json.Phone }}"
            },
            {
              "name": "Voicemail",
              "value": "={{ $json.Voicemail }}"
            },
            {
              "name": "Day ",
              "value": "5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        192,
        928
      ],
      "id": "e85fe1c2-3fd2-4929-a03c-13a0d8996991",
      "name": "HTTP Request For VM 1 Day 1"
    },
    {
      "parameters": {
        "operation": "get",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        944,
        928
      ],
      "id": "b96aa348-36e5-4078-8946-d3c2d2cf7d03",
      "name": "Get a contact6"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "21b84261-523b-4e07-9527-938ed7e290a4",
      "name": "Check If Booked Day 3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1184,
        928
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b617445f-c76a-4f9c-b227-c092be24b98a",
              "leftValue": "={{ $json.shouldWait }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2560,
        1856
      ],
      "id": "0ab58eee-e8f2-4fa9-b306-18d904d9810e",
      "name": "If True"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_5fc6a2d55ae7a6bcf3d547d1dfa7a523d0544d669a6a6787"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_3501k3yek057fzwtc3h76889sp2s"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_0401k3yetaz3e93vrdy1e42jvxv4"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1968,
        1792
      ],
      "id": "5ba29139-633f-423b-a438-9e1ba5a06677",
      "name": "Eleven-lab call "
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1520,
        2032
      ],
      "id": "0a7bdc0a-8ac2-464e-93d6-b4c2221f7b14",
      "name": "Send a message4",
      "webhookId": "12ddcc4a-222a-4c5f-842a-a9d425c632b0"
    },
    {
      "parameters": {
        "amount": 15,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1328,
        1776
      ],
      "id": "0284a4f2-540f-400d-a21b-1f8c1e8fac91",
      "name": "Wait2",
      "webhookId": "ce889f13-9f0e-467a-9768-c741c6daab0a"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1807673988,
          "mode": "list",
          "cachedResultName": "Outbound Calls",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=1807673988"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "To Number",
              "lookupValue": "={{ $('Get a contact If they booked').item.json.phone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -1056,
        1808
      ],
      "id": "fa245139-5864-4432-aa63-44c68ee24032",
      "name": "Get Summary of transcript1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\nThis is actual transcript day 0:{{ $json['Transcript Day 0'] }}.\n\nThis is summary 0:{{ $json['Summary Day 0'] }}\nNow time: {{ $now }}\n\n",
        "messages": {
          "messageValues": [
            {
              "message": "SYSTEM PROMPT:\n\nYOU ARE AN EXPERT AI CALL CLASSIFICATION AGENT TRAINED TO ANALYZE OUTBOUND CALL TRANSCRIPTS AND ROUTE THEM INTO FIVE SPECIFIC CATEGORIES FOR n8n.\n\n### INSTRUCTIONS ###\n- Carefully read the call transcript.\n- The **current time** is provided as `now_time` in ISO format (e.g., 2025-08-28T14:46:39.173+03:00). Use this as the reference for all future reminders.\n- Classify each transcript into **exactly one** of these categories:\n  1. REMINDER\n  2. LEAD-OUT (opt-out)\n  3. NOT-PICKED\n  4. BOOKED\n\n---\n\n### CATEGORIES AND RULES ###\n\n1. **REMINDER**\n- Triggered when the client requests a future follow-up.\n- Examples: \"remind me later\", \"call me tomorrow morning\", \"call me in the afternoon\", \"send me an email reminder\", \"text me a reminder\".\n- Rules:\n  - Always return `\"classification\": \"reminder\"`.\n  - Include `\"reminder_type\"` as `\"call\"`, `\"sms\"`, or `\"email\"`:\n    - `\"call\"` → user says \"call me back\" or \"call me again\"\n    - `\"sms\"` → user says \"text me\" or \"send me an sms\"\n    - `\"email\"` → user says \"email me\"\n    - Default to `\"sms\"` if not specified\n  - Include `\"time\"` as an **ISO datetime in the future**, using the provided `now_time` as reference:\n    - \"remind me in 5 hours\" → `{{ $now.plus({ hours: 5 }).toISO() }}`\n    - \"remind me tomorrow morning\" → `{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}`\n    - \"call me this afternoon\" → pick the **next future afternoon hour** relative to `now_time`, e.g., `{{ $now.set({ hour: 15, minute: 0, second: 0 }).toISO() }}`\n  - If no time is specified, return `\"time\": null`.\n\n2. **LEAD-OUT**\n- Triggered when the client explicitly does NOT want further contact.\n- Keywords: \"stop\", \"don’t call me again\", \"remove me from your list\", \"unsubscribe\", \"never call again\", \"not interested\".\n- Output: `\"classification\": \"lead-out\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n3. **NOT-PICKED**\n- Triggered if the call was not answered, when the transcript is null, went to voicemail, or user is unavailable.\n- Keywords: \"no answer\", \"not available\", \"didn’t pick\", \"busy tone\", \"left a voicemail\".\n- Output: `\"classification\": \"not-picked\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n4. **BOOKED**\n- Triggered if the client agrees to a meeting or appointment.\n- Examples: \"Yes, let's book that\", \"I'll take the meeting\", \"book it for me now\".\n- Output: `\"classification\": \"booked\"`,  `\"booking_type\": sms or email`, `\"time\": null`, `\"reminder_type\": null`.\n- Rules:\n- Include `\"booking_type\"` as  `\"sms\"`, or `\"email\"`:\n    - `\"sms\"` → user says \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - `\"email\"` → user says \"email me the booking link \", \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - Default to `\"email\"` if not specified\n---\n\n### EDGE CASES ###\n- If the user says both \"remind me\" and \"don't call me again\", **prioritize LEAD-OUT**.\n- If the user agrees to a meeting, **prioritize BOOKED**.\n\n---\n\n### OUTPUT FORMAT ###\nAlways return exactly this JSON structure (valid JSON, no comments):\n\n{\n  \"classification\": \"reminder | lead-out | not-picked | booked\",\n  \"time\": \"ISO datetime format if reminder includes a time, else null\",\n  \"reminder_type\": \"call | sms | email, else null\"\n  \"booking_type\": \"sms | email, else null,\n}\n\n**Notes:**\n- `\"time\"` must be **null** if not a reminder or if no time specified.\n- `\"reminder_type\"` must be **null** if not a reminder.\n- Do not include extra text, explanations, or formatting outside the JSON.\n- Use the provided `now_time` as the reference for all dynamic time calculations.\n- Here’s a recommended table in 12-hour format (LA time):\n\nPart of Day\tStarts At\tEnds At\tNotes\nMidnight\t12:00 AM\t12:59 AM\tNot suitable for clinic reminders\nEarly Morning\t6:00 AM\t7:59 AM\tBefore business hours; some early risers\nMorning\t8:00 AM\t11:59 AM\tClinic opening hours; ideal for reminders\nNoon\t12:00 PM\t12:59 PM\tMidday break; okay for reminders\nAfternoon\t1:00 PM\t4:59 PM\tActive clinic hours; good for reminders\nEvening\t5:00 PM\t7:00 PM\tClosing hours; okay for last call reminders\nNight\t7:01 PM\t11:59 PM\tNot ideal; outside typical business hours\n\nNotes / Adjustments for MedSpas & Clinics:\n\nAvoid reminders during very early morning (1–5:59 AM) or late night (after 7 PM).\n\nDefault morning reminders → 9:00 AM\n\nDefault afternoon reminders → 2:00 PM\n\nDefault evening reminders → 6:00 PM\n---\n\n### EXAMPLES ###\n\n**Example 1:**  \nTranscript: \"Can you call me tomorrow morning at 9am?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"time\": \"{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}\",\n  \"reminder_type\": \"call\"\n}\n\n**Example 2:**  \nTranscript: \"Please don’t contact me again via SMS.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"lead-out\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 3:**  \nTranscript: \"The number you have dialed is not available.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"not-picked\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n\n**Example 5:**  \nTranscript: \"That sounds good, I'll take that meeting, send booking link via email\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"booked\",\n  \"booking_type\": email,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 6:**  \nTranscript: \"Can you send me an email reminder next week?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"booking_type\": null,\n  \"time\": \"{{ $now.plus({ days: 7 }).toISO() }}\",\n  \"reminder_type\": \"email\"\n}\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -704,
        1808
      ],
      "id": "e67aaa52-a0bf-48e3-b5b3-6980c5baaa90",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -720,
        2016
      ],
      "id": "2056e3d4-87e4-4c5e-b764-6ca00b2a5262",
      "name": "OpenRouter Chat Model1"
    },
    {
      "parameters": {
        "operation": "delete",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        576,
        2128
      ],
      "id": "f67feaae-2eb9-4a51-b801-3b070e8cd7d3",
      "name": "Delete a contact1"
    },
    {
      "parameters": {
        "operation": "update",
        "contactId": "uh8ZXbxgiiPqAwxCXb7b",
        "updateFields": {
          "tags": "={{ $json.tags.concat(['pause-reminder']) }}"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        704,
        1888
      ],
      "id": "7354a234-b2cc-429d-af22-fe2bd80b7471",
      "name": "Update a contact tag pause-reminder1"
    },
    {
      "parameters": {
        "resume": "specificTime",
        "dateTime": "={{ $now.plus({ days: 2 }).set({ hour: 18, minute: 0, second: 0 }).toISO() }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        880,
        1888
      ],
      "id": "05c54a94-dc64-4161-9dd7-c3aa09c3d6a6",
      "name": "Wait for desired time1",
      "webhookId": "90a4e27b-c45b-4ee8-a0bc-2a62c3b13d19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3b7ab24a-966e-469e-998c-4f024b85b617",
              "leftValue": "={{ $('Code2').item.json.reminder_type }}",
              "rightValue": "call",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1472,
        1888
      ],
      "id": "a67867dc-9c53-4d3a-91c2-14c4598b6eff",
      "name": "If reminder is for Call or Email + SMS1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2192,
        1888
      ],
      "id": "eea9cc11-c561-4b32-b22f-f8a79cdee12e",
      "name": "Eleven-lab calls for reminder1"
    },
    {
      "parameters": {
        "subject": "Your appointment reminder – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},\n\nAs you requested during our recent call, here’s your reminder from Yellow Rock House.\nYou can book your appointment anytime using the link below:\n\n👉 Book Your Appointment Here\n\nWe look forward to seeing you soon!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2176,
        2080
      ],
      "id": "aa259b72-accf-4e57-b37c-689eea8cda2b",
      "name": "Send a reminder email1",
      "webhookId": "c7b5aa45-82c8-47e0-9c9b-ab9abbf6cf8a"
    },
    {
      "parameters": {
        "message": "=Hi {{leadName}}, this is a reminder from Yellow Rock House. You can book your appointment anytime here: {{bookingLink}}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2368,
        2080
      ],
      "id": "5219889a-0a54-440f-9043-f69d36eeff94",
      "name": "Send an reminder sms1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        560,
        2352
      ],
      "id": "62c510ef-79d0-4ec0-a831-ef8563a0e2f7",
      "name": "Eleven-lab outbound call "
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "reminder",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "620d8e74-2eeb-4b51-b590-bc64ff01c404"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reminder"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "69a956dc-77a2-4cc4-8127-a5420ab4331f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "lead-out",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "lead-out"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "817d783e-7227-415d-b1cb-6282f2a92467",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "not-picked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "not-picked"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b13a6c6c-f0fe-41c8-8ddf-df03b1a6f44f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "booked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "booked"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        144,
        1904
      ],
      "id": "d147e77f-2fae-4f05-8112-be96847639d8",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "let aiText = null;\n\n// Try multiple possible locations for AI output\nif (items[0].json.response?.generations?.[0]?.[0]?.text) {\n    aiText = items[0].json.response.generations[0][0].text;\n} else if (items[0].json.text) {\n    aiText = items[0].json.text;\n} else {\n    throw new Error(\"AI output not found\");\n}\n\n// Remove any ```json or ``` markdown\naiText = aiText.replace(/```json\\s*/g, '').replace(/```/g, '').trim();\n\n// Try parsing JSON\nlet parsed = null;\ntry {\n    parsed = JSON.parse(aiText);\n} catch (err) {\n    throw new Error(\"Failed to parse AI JSON output\");\n}\n\n// If the AI returned the object under \"output\", use that; otherwise fallback\nconst output = parsed.output ?? parsed;\n\n// Ensure all required fields exist\nconst classification = output.classification ?? null;\nconst time = output.time ?? null;\nconst reminder_type = output.reminder_type ?? null;\nconst booking_type = output.booking_type ?? null; // <-- added field\n\n// Return properly formatted n8n object\nreturn [\n    {\n        json: {\n            classification,\n            time,\n            reminder_type,\n            booking_type // <-- included in output\n        }\n    }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -96,
        1936
      ],
      "id": "abf99cd0-a2d0-41f3-abfa-bddf147ec9a3",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        528,
        1888
      ],
      "id": "de5a55ca-add4-468e-b5d3-97f379689401",
      "name": "Get a contact18"
    },
    {
      "parameters": {
        "subject": "=Client Removal Update – {{clientName}} (Yellow Rock House)",
        "emailType": "text",
        "message": "=Hi Team,  \n\nDuring our recent outbound call, {{clientName}} requested to be removed from further communication. As per their request, we have now removed them from our contact list.  \n\nPlease ensure that:  \n - No further calls or follow-ups are made to this client.  \n - All records in CRM/n8n are updated accordingly.  \n - Any scheduled reminders or campaigns related to this client are canceled.  \n\nThanks for keeping everything up to date and respecting client preferences.  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        832,
        2128
      ],
      "id": "27204b3d-4c1e-46f4-8c53-b8bfb601d166",
      "name": "Send a message5",
      "webhookId": "55b50f56-8e90-4d7b-acef-9dd4f6ce08f7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        816,
        3072
      ],
      "id": "7c16b268-d88b-4739-912b-72bccc97f0d1",
      "name": "Thanks for booking sms1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f9ccb6d-d137-48eb-8e64-10511fa5ec12",
              "leftValue": "={{ $json.booking_type }}",
              "rightValue": "sms",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        544,
        3136
      ],
      "id": "5a460fca-e201-4817-a585-771bab20596f",
      "name": "If2"
    },
    {
      "parameters": {
        "subject": "=Booking link as promised – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},  \n\nThank you for agreeing to book your appointment with Yellow Rock House. \nYou can confirm your slot anytime using the link below:  👉 Book Your Appointment Here  \n\nWe appreciate your time and look forward to seeing you soon!  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        800,
        3360
      ],
      "id": "9d4539b9-916a-4b45-be55-0f8dfb5fa1e5",
      "name": "Send a message6",
      "webhookId": "abda3e9f-8b31-419a-9e49-84b4796d630c"
    },
    {
      "parameters": {
        "subject": "=New Lead Ready to Book – {{leadName}}",
        "emailType": "text",
        "message": "=Hi Team,\n\nWe have a new lead who has agreed on the call to book an appointment with Yellow Rock House.\n\nLead Name: {{leadName}}\nBooking Link: {{bookingLink}}\n\nPlease make sure to follow up and assist them promptly.\n\nThanks for your attention!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1264,
        3184
      ],
      "id": "9e0d2a80-a7b1-4d80-bcb0-b4b19b2572fc",
      "name": "Notifying Team1",
      "webhookId": "6385279f-f8d4-4a19-a7d7-c040936992c4"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Lead data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Reminder": "yes",
            "Phone": "={{ $json.phone }}"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Contact ID",
              "displayName": "Contact ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Clinic Name",
              "displayName": "Clinic Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Time spam",
              "displayName": "Time spam",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Reminder",
              "displayName": "Reminder",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Follow up day",
              "displayName": "Follow up day",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1056,
        1888
      ],
      "id": "3cbbcc0a-ca8d-4b54-a32c-1d749d060087",
      "name": "Last Conversation1"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        1744,
        2064
      ],
      "id": "cc0f7c4a-aaaf-409b-ab71-ad6f90a0d5a2",
      "name": "Get a contact7"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "21c91182-f6ca-44fc-ac57-2a8a1aaf4f33",
      "name": "Check If Booked Day 4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1920,
        2064
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d65c0a3-c3e1-430b-a9e3-661f26df93c0",
              "leftValue": "={{ $json.success }}",
              "rightValue": "True",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1712,
        1792
      ],
      "id": "e2e5d655-bc0c-4e9b-af97-d1bb3ef7dbd6",
      "name": "If Called Successed"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        2448,
        1872
      ],
      "id": "97b1c15d-8a33-4055-ac41-b7577c17aaae",
      "name": "Remove pause-reminder tag from contact2"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        2576,
        2096
      ],
      "id": "f11ac670-04fd-4e22-8fec-b1aa9a168c2c",
      "name": "Remove pause-reminder tag from contact3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1296,
        2048
      ],
      "id": "986fd698-3e5f-4e4b-a644-702dd8a07817",
      "name": "HTTP Request for Day 8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2736,
        1872
      ],
      "id": "77820e15-daa9-44a4-83d3-1b51666a0b61",
      "name": "HTTP Request for Day 9"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2784,
        2096
      ],
      "id": "1d31349d-8f47-4ab1-8f04-7b2367a76f10",
      "name": "HTTP Request for Day 10"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        1744,
        1872
      ],
      "id": "ac0dd8cf-eef4-4a52-a874-8dd7ef751870",
      "name": "Get a contact8"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "18212d65-fea2-4514-a521-5604abf3bae4",
      "name": "Check If Booked Day 5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1952,
        1872
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2256,
        2032
      ],
      "id": "8eabeae4-8964-4260-a8d3-9fc96154b9e6",
      "name": "HTTP Request for Day 7"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1056,
        2368
      ],
      "id": "88d9694b-f0e3-4b9e-83c8-62ce823ded27",
      "name": "HTTP Request for Day 11"
    },
    {
      "parameters": {
        "resume": "specificTime",
        "dateTime": "={{ $now.plus({ days: 2 }).set({ hour: 10, minute: 45, second: 0, millisecond: 0 }).toISO() }}\n"
      },
      "id": "a7f52ab2-111b-4481-9910-87041d5d1193",
      "name": "Wait 2 day for Day 5",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -2864,
        208
      ],
      "webhookId": "4ad6f61c-743a-4d05-8066-806038ff1c02",
      "notes": "Wait 24 hours for Day 1 sequence"
    },
    {
      "parameters": {
        "unit": "={{ $now >= $now.set({ hour: 16, minute: 30, second: 0, millisecond: 0 }) \n   ? $now.plus({ days: 1 }).set({ hour: 16, minute: 30, second: 0, millisecond: 0 }).toISO() \n   : $now.set({ hour: 20, minute: 30, second: 0, millisecond: 0 }).toISO() \n}}\n"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2256,
        1792
      ],
      "id": "27e75f47-d948-45ce-9ba3-f031cf157288",
      "name": "Wait 8 pm",
      "webhookId": "45b576de-92f7-442b-a09d-b8be0e6b16dd"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Wait 2 day for Day 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 1 Minute": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get a contact If they booked",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 0": {
      "main": [
        [],
        [
          {
            "node": "Add the follow up day 0 in column",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Check If Booked Day 0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab call 1": {
      "main": [
        [
          {
            "node": "If Call Success or Not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 Minutes": {
      "main": [
        [
          {
            "node": "Get transcript to check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Summary of transcript": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Delete a contact": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a contact tag pause-reminder": {
      "main": [
        [
          {
            "node": "Wait for desired time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for desired time": {
      "main": [
        [
          {
            "node": "Last Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If reminder is for Call or Email + SMS": {
      "main": [
        [
          {
            "node": "Get a contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a contact4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab calls for reminder": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a reminder email": {
      "main": [
        [
          {
            "node": "Send an reminder sms",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an reminder sms": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Get a contact17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete a contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Eleven-lab outbound call 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact17": {
      "main": [
        [
          {
            "node": "Update a contact tag pause-reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thanks for booking sms": {
      "main": [
        [
          {
            "node": "Notifying Team",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Thanks for booking sms",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message3": {
      "main": [
        [
          {
            "node": "Notifying Team",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last Conversation": {
      "main": [
        [
          {
            "node": "If reminder is for Call or Email + SMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact": {
      "main": [
        [
          {
            "node": "Check If Booked Day 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact4": {
      "main": [
        [
          {
            "node": "Check If Booked Day 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 1": {
      "main": [
        [],
        [
          {
            "node": "Eleven-lab calls for reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 2": {
      "main": [
        [],
        [
          {
            "node": "Send a reminder email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get Summary of transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message2": {
      "main": [
        [
          {
            "node": "Wait 2 Minutes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get transcript to check": {
      "main": [
        [
          {
            "node": "If transcript  is empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If transcript  is empty": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send an SMS Booking link sms1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If call success": {
      "main": [
        [
          {
            "node": "Wait 2 Minutes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request For VM 1 Day 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an SMS Booking link sms1": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Get a contact6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Wait 1 Minute",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact If they booked": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add the follow up day 0 in column": {
      "main": [
        [
          {
            "node": "Eleven-lab call 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Call Success or Not": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message to notify team of failur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message to notify team of failur": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact": {
      "main": [
        [
          {
            "node": "HTTP Request for Day ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact1": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab outbound call 2": {
      "main": [
        [
          {
            "node": "If call success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code To Check Evening Wait": {
      "main": [
        [
          {
            "node": "If True",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request For VM 1 Day 1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact6": {
      "main": [
        [
          {
            "node": "Check If Booked Day 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 3": {
      "main": [
        [],
        [
          {
            "node": "Code To Check Evening Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If True": {
      "main": [
        [
          {
            "node": "Wait 8 pm",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request for Day 7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab call ": {
      "main": [
        [
          {
            "node": "If Called Successed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message4": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Get Summary of transcript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Summary of transcript1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Delete a contact1": {
      "main": [
        [
          {
            "node": "Send a message5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a contact tag pause-reminder1": {
      "main": [
        [
          {
            "node": "Wait for desired time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for desired time1": {
      "main": [
        [
          {
            "node": "Last Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If reminder is for Call or Email + SMS1": {
      "main": [
        [
          {
            "node": "Get a contact8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a contact7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab calls for reminder1": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a reminder email1": {
      "main": [
        [
          {
            "node": "Send an reminder sms1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an reminder sms1": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab outbound call ": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get a contact18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete a contact1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Eleven-lab outbound call ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact18": {
      "main": [
        [
          {
            "node": "Update a contact tag pause-reminder1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thanks for booking sms1": {
      "main": [
        [
          {
            "node": "Notifying Team1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Thanks for booking sms1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message6": {
      "main": [
        [
          {
            "node": "Notifying Team1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last Conversation1": {
      "main": [
        [
          {
            "node": "If reminder is for Call or Email + SMS1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact7": {
      "main": [
        [
          {
            "node": "Check If Booked Day 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 4": {
      "main": [
        [],
        [
          {
            "node": "Send a reminder email1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Called Successed": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact2": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact3": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact8": {
      "main": [
        [
          {
            "node": "Check If Booked Day 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 5": {
      "main": [
        [],
        [
          {
            "node": "Eleven-lab calls for reminder1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 day for Day 5": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 8 pm": {
      "main": [
        [
          {
            "node": "Eleven-lab call ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "Eleven-lab calls for reminder": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ],
    "Eleven-lab outbound call 2": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ],
    "Eleven-lab calls for reminder1": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ],
    "Eleven-lab outbound call ": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ]
  },
  "meta": {
    "instanceId": "1a6100b2e52ae3c290d86af3a0507cd2e67a0cc99a26544ed00345df21ae1dd0"
  }
}
