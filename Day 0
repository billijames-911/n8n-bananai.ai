{
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "b23151a9-ddd1-49b4-af7a-20412d374fc8",
      "name": "Check If Booked Day 0",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1568,
        576
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1264,
        576
      ],
      "id": "7b62c3ff-42b2-475e-82ef-1776380f2d2a",
      "name": "Merge"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"status\": \"success\", \"message\": \"VSL tracking initialized\" } }}",
        "options": {}
      },
      "id": "85222f5c-5604-49c8-bb72-f460d7305f4c",
      "name": "Tracking Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        432,
        592
      ],
      "notes": "Returns success response for VSL tracking initialization"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_5fc6a2d55ae7a6bcf3d547d1dfa7a523d0544d669a6a6787"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_3501k3yek057fzwtc3h76889sp2s"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_0401k3yetaz3e93vrdy1e42jvxv4"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2208,
        592
      ],
      "id": "cd567349-531f-433e-a4f6-ea79f1b50233",
      "name": "Eleven-lab call 1"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "id": "b2993a0a-97eb-4a61-a261-624469962e1b",
      "name": "Wait 2 Minutes",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1968,
        1280
      ],
      "webhookId": "ec5b365e-e056-4d31-a6b7-7879c6d50700",
      "notes": "Wait 2 minutes between call and voicemail/SMS"
    },
    {
      "parameters": {
        "from": "+16812026276",
        "to": "+18777804236",
        "message": "=Here’s the free training I mentioned: https://yellowrockhouse.com/opt-in\nIt breaks down how PreSold OS™ helps founders get 10–15 booked calls/month using AI workflows and warm traffic. Let me know what you think.",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        3040,
        1264
      ],
      "id": "c08db1b0-a7f4-4bc6-97b8-b915dab5f525",
      "name": "Send an SMS Booking link sms"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1807673988,
          "mode": "list",
          "cachedResultName": "Outbound Calls",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=1807673988"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "To Number",
              "lookupValue": "={{ $('Get a contact If they booked').item.json.phone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        192,
        880
      ],
      "id": "4fc35cc4-01ba-4dc6-a19d-8b642a8eba26",
      "name": "Get Summary of transcript"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\nThis is actual transcript day 0:{{ $json['Transcript Day 0'] }}.\n\nThis is summary 0:{{ $json['Summary Day 0'] }}\nNow time: {{ $now }}\n\n",
        "messages": {
          "messageValues": [
            {
              "message": "SYSTEM PROMPT:\n\nYOU ARE AN EXPERT AI CALL CLASSIFICATION AGENT TRAINED TO ANALYZE OUTBOUND CALL TRANSCRIPTS AND ROUTE THEM INTO FIVE SPECIFIC CATEGORIES FOR n8n.\n\n### INSTRUCTIONS ###\n- Carefully read the call transcript.\n- The **current time** is provided as `now_time` in ISO format (e.g., 2025-08-28T14:46:39.173+03:00). Use this as the reference for all future reminders.\n- Classify each transcript into **exactly one** of these categories:\n  1. REMINDER\n  2. LEAD-OUT (opt-out)\n  3. NOT-PICKED\n  4. BOOKED\n\n---\n\n### CATEGORIES AND RULES ###\n\n1. **REMINDER**\n- Triggered when the client requests a future follow-up.\n- Examples: \"remind me later\", \"call me tomorrow morning\", \"call me in the afternoon\", \"send me an email reminder\", \"text me a reminder\".\n- Rules:\n  - Always return `\"classification\": \"reminder\"`.\n  - Include `\"reminder_type\"` as `\"call\"`, `\"sms\"`, or `\"email\"`:\n    - `\"call\"` → user says \"call me back\" or \"call me again\"\n    - `\"sms\"` → user says \"text me\" or \"send me an sms\"\n    - `\"email\"` → user says \"email me\"\n    - Default to `\"sms\"` if not specified\n  - Include `\"time\"` as an **ISO datetime in the future**, using the provided `now_time` as reference:\n    - \"remind me in 5 hours\" → `{{ $now.plus({ hours: 5 }).toISO() }}`\n    - \"remind me tomorrow morning\" → `{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}`\n    - \"call me this afternoon\" → pick the **next future afternoon hour** relative to `now_time`, e.g., `{{ $now.set({ hour: 15, minute: 0, second: 0 }).toISO() }}`\n  - If no time is specified, return `\"time\": null`.\n\n2. **LEAD-OUT**\n- Triggered when the client explicitly does NOT want further contact.\n- Keywords: \"stop\", \"don’t call me again\", \"remove me from your list\", \"unsubscribe\", \"never call again\", \"not interested\".\n- Output: `\"classification\": \"lead-out\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n3. **NOT-PICKED**\n- Triggered if the call was not answered, when the transcript is null, went to voicemail, or user is unavailable.\n- Keywords: \"no answer\", \"not available\", \"didn’t pick\", \"busy tone\", \"left a voicemail\".\n- Output: `\"classification\": \"not-picked\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n4. **BOOKED**\n- Triggered if the client agrees to a meeting or appointment.\n- Examples: \"Yes, let's book that\", \"I'll take the meeting\", \"book it for me now\".\n- Output: `\"classification\": \"booked\"`,  `\"booking_type\": sms or email`, `\"time\": null`, `\"reminder_type\": null`.\n- Rules:\n- Include `\"booking_type\"` as  `\"sms\"`, or `\"email\"`:\n    - `\"sms\"` → user says \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - `\"email\"` → user says \"email me the booking link \", \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - Default to `\"email\"` if not specified\n---\n\n### EDGE CASES ###\n- If the user says both \"remind me\" and \"don't call me again\", **prioritize LEAD-OUT**.\n- If the user agrees to a meeting, **prioritize BOOKED**.\n\n---\n\n### OUTPUT FORMAT ###\nAlways return exactly this JSON structure (valid JSON, no comments):\n\n{\n  \"classification\": \"reminder | lead-out | not-picked | booked\",\n  \"time\": \"ISO datetime format if reminder includes a time, else null\",\n  \"reminder_type\": \"call | sms | email, else null\"\n  \"booking_type\": \"sms | email, else null,\n}\n\n**Notes:**\n- `\"time\"` must be **null** if not a reminder or if no time specified.\n- `\"reminder_type\"` must be **null** if not a reminder.\n- Do not include extra text, explanations, or formatting outside the JSON.\n- Use the provided `now_time` as the reference for all dynamic time calculations.\n- Here’s a recommended table in 12-hour format (LA time):\n\nPart of Day\tStarts At\tEnds At\tNotes\nMidnight\t12:00 AM\t12:59 AM\tNot suitable for clinic reminders\nEarly Morning\t6:00 AM\t7:59 AM\tBefore business hours; some early risers\nMorning\t8:00 AM\t11:59 AM\tClinic opening hours; ideal for reminders\nNoon\t12:00 PM\t12:59 PM\tMidday break; okay for reminders\nAfternoon\t1:00 PM\t4:59 PM\tActive clinic hours; good for reminders\nEvening\t5:00 PM\t7:00 PM\tClosing hours; okay for last call reminders\nNight\t7:01 PM\t11:59 PM\tNot ideal; outside typical business hours\n\nNotes / Adjustments for MedSpas & Clinics:\n\nAvoid reminders during very early morning (1–5:59 AM) or late night (after 7 PM).\n\nDefault morning reminders → 9:00 AM\n\nDefault afternoon reminders → 2:00 PM\n\nDefault evening reminders → 6:00 PM\n---\n\n### EXAMPLES ###\n\n**Example 1:**  \nTranscript: \"Can you call me tomorrow morning at 9am?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"time\": \"{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}\",\n  \"reminder_type\": \"call\"\n}\n\n**Example 2:**  \nTranscript: \"Please don’t contact me again via SMS.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"lead-out\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 3:**  \nTranscript: \"The number you have dialed is not available.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"not-picked\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n\n**Example 5:**  \nTranscript: \"That sounds good, I'll take that meeting, send booking link via email\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"booked\",\n  \"booking_type\": email,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 6:**  \nTranscript: \"Can you send me an email reminder next week?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"booking_type\": null,\n  \"time\": \"{{ $now.plus({ days: 7 }).toISO() }}\",\n  \"reminder_type\": \"email\"\n}\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        544,
        880
      ],
      "id": "61b6e7df-fdb5-4320-88a0-475598c1e2e8",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        528,
        1088
      ],
      "id": "ec2691c9-f21f-481a-886a-b23a2cafaa1f",
      "name": "OpenRouter Chat Model"
    },
    {
      "parameters": {
        "operation": "delete",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        1568,
        1072
      ],
      "id": "caca0920-f943-497c-b8fb-a72143c4ed73",
      "name": "Delete a contact"
    },
    {
      "parameters": {
        "operation": "update",
        "contactId": "uh8ZXbxgiiPqAwxCXb7b",
        "updateFields": {
          "tags": "={{ $json.tags.concat(['pause-reminder']) }}"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        1696,
        832
      ],
      "id": "4cd94181-4a9c-4518-9833-ca3813fe3a12",
      "name": "Update a contact tag pause-reminder"
    },
    {
      "parameters": {
        "resume": "specificTime",
        "dateTime": "={{ $now.plus({ days: 2 }).set({ hour: 18, minute: 0, second: 0 }).toISO() }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1872,
        832
      ],
      "id": "99b3cb38-ed3c-4f0c-a736-8f059680bb33",
      "name": "Wait for desired time",
      "webhookId": "90a4e27b-c45b-4ee8-a0bc-2a62c3b13d19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3b7ab24a-966e-469e-998c-4f024b85b617",
              "leftValue": "={{ $('Code to add the tag').item.json.reminder_type }}",
              "rightValue": "call",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2288,
        832
      ],
      "id": "bc148c32-ea7e-4071-968d-ede262bd1edf",
      "name": "If reminder is for Call or Email + SMS"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3184,
        832
      ],
      "id": "ff7269e4-21c4-45ef-a3c8-18647441e64d",
      "name": "Eleven-lab calls for reminder"
    },
    {
      "parameters": {
        "subject": "Your appointment reminder – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},\n\nAs you requested during our recent call, here’s your reminder from Yellow Rock House.\nYou can book your appointment anytime using the link below:\n\n👉 Book Your Appointment Here\n\nWe look forward to seeing you soon!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3168,
        1024
      ],
      "id": "9a2a37bc-e5b2-4595-863b-95bbe110a3bb",
      "name": "Send a reminder email",
      "webhookId": "c7b5aa45-82c8-47e0-9c9b-ab9abbf6cf8a"
    },
    {
      "parameters": {
        "message": "=Hi {{leadName}}, this is a reminder from Yellow Rock House. You can book your appointment anytime here: {{bookingLink}}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        3360,
        1024
      ],
      "id": "021d73ec-0cc1-4ca1-8f5c-6725a1396719",
      "name": "Send an reminder sms"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "reminder",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "620d8e74-2eeb-4b51-b590-bc64ff01c404"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reminder"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "69a956dc-77a2-4cc4-8127-a5420ab4331f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "lead-out",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "lead-out"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "817d783e-7227-415d-b1cb-6282f2a92467",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "not-picked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "not-picked"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b13a6c6c-f0fe-41c8-8ddf-df03b1a6f44f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "booked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "booked"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1136,
        848
      ],
      "id": "e0faf1de-0f07-455f-a0c9-3467123cfa32",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        1520,
        832
      ],
      "id": "92ac021b-e96b-4212-9e6e-439af875d98c",
      "name": "Get a contact17"
    },
    {
      "parameters": {
        "subject": "=Client Removal Update – {{clientName}} (Yellow Rock House)",
        "emailType": "text",
        "message": "=Hi Team,  \n\nDuring our recent outbound call, {{clientName}} requested to be removed from further communication. As per their request, we have now removed them from our contact list.  \n\nPlease ensure that:  \n - No further calls or follow-ups are made to this client.  \n - All records in CRM/n8n are updated accordingly.  \n - Any scheduled reminders or campaigns related to this client are canceled.  \n\nThanks for keeping everything up to date and respecting client preferences.  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1824,
        1072
      ],
      "id": "6a55a725-9c75-49b5-9f87-7e5665b90b84",
      "name": "Send a message",
      "webhookId": "55b50f56-8e90-4d7b-acef-9dd4f6ce08f7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        560,
        1520
      ],
      "id": "7690923f-712c-4653-a336-c817c42fa196",
      "name": "Thanks for booking sms"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f9ccb6d-d137-48eb-8e64-10511fa5ec12",
              "leftValue": "={{ $json.booking_type }}",
              "rightValue": "sms",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        256,
        1552
      ],
      "id": "562d500f-c336-4401-8fa7-ca5fc17dacbb",
      "name": "If1"
    },
    {
      "parameters": {
        "subject": "=Booking link as promised – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},  \n\nThank you for agreeing to book your appointment with Yellow Rock House. \nYou can confirm your slot anytime using the link below:  👉 Book Your Appointment Here  \n\nWe appreciate your time and look forward to seeing you soon!  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        576,
        1712
      ],
      "id": "cdee1bd1-bb4d-4be6-b6bf-742210b72591",
      "name": "Send a message3",
      "webhookId": "abda3e9f-8b31-419a-9e49-84b4796d630c"
    },
    {
      "parameters": {
        "subject": "=New Lead Ready to Book – {{leadName}}",
        "emailType": "text",
        "message": "=Hi Team,\n\nWe have a new lead who has agreed on the call to book an appointment with Yellow Rock House.\n\nLead Name: {{leadName}}\nBooking Link: {{bookingLink}}\n\nPlease make sure to follow up and assist them promptly.\n\nThanks for your attention!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1136,
        1632
      ],
      "id": "d19df6d4-081a-4e8c-8821-7fc045a05eba",
      "name": "Notifying Team",
      "webhookId": "6385279f-f8d4-4a19-a7d7-c040936992c4"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Lead data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Reminder": "yes",
            "Phone": "={{ $json.phone }}"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Contact ID",
              "displayName": "Contact ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Clinic Name",
              "displayName": "Clinic Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Time spam",
              "displayName": "Time spam",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Reminder",
              "displayName": "Reminder",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Follow up day",
              "displayName": "Follow up day",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2048,
        832
      ],
      "id": "9842f031-4b24-4a8c-83e2-df541393efe5",
      "name": "Last Conversation"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        2736,
        816
      ],
      "id": "54576eb4-e0c9-4092-b331-cbcad3d1274e",
      "name": "Get a contact"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        2736,
        1008
      ],
      "id": "cc394c94-c221-42a3-81c6-797525b99406",
      "name": "Get a contact4"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "e5e8635d-57a5-455c-aebe-8ded78b23abc",
      "name": "Check If Booked Day 1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2944,
        816
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "2e5aa8f7-20b7-4dac-9df4-df9f28ef05a8",
      "name": "Check If Booked Day 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2912,
        1008
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1840,
        1600
      ],
      "id": "d58dc42e-d07d-451c-a01b-d62e8937f496",
      "name": "Send a message2",
      "webhookId": "12ddcc4a-222a-4c5f-842a-a9d425c632b0"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2176,
        1280
      ],
      "id": "23130c3c-669d-45d3-8522-a72a185062e9",
      "name": "Get transcript to check"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9348d1fa-b980-4ebf-a773-8ea461b73f76",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2384,
        1280
      ],
      "id": "f932eaa4-8748-42ae-995d-a7f27c093259",
      "name": "If transcript  is empty"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d65c0a3-c3e1-430b-a9e3-661f26df93c0",
              "leftValue": "={{ $json.success }}",
              "rightValue": "True",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1728,
        1296
      ],
      "id": "59bd2464-5479-4daf-b578-56763e33475e",
      "name": "If call success"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68b92b4c-3227-452a-889d-5b66ef59fe9c",
              "name": "Name",
              "value": "Bilal",
              "type": "string"
            },
            {
              "id": "99726aa9-fae7-4b9f-aa29-3f5c913daa20",
              "name": "Phone",
              "value": "+966576908563",
              "type": "string"
            },
            {
              "id": "229a07d4-981a-4dc2-83eb-0b3ed761b83d",
              "name": "Voicemail",
              "value": "1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2624,
        1264
      ],
      "id": "117fcf19-f84b-4f37-9abd-a53d5e86ac40",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "from": "+16812026276",
        "to": "+18777804236",
        "message": "=Hi! 👋 In case if you miss the link, here is the link:\n\nhttps://api.leadconnectorhq.com/widget/booking/W8QcIllkRPKyS76yvPEZ\n\nPlease book a time that works for you using the link.\n\nLooking forward to connecting with you!",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2496,
        1536
      ],
      "id": "81c9dcce-8c8c-48a7-aab1-880ae80ef367",
      "name": "Send an SMS Booking link sms1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/hooks/6YFcDHnhN2DTQoFcYZF3/webhook-trigger/50125141-a71b-45db-95e7-ab8334585df7",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=Name",
              "value": "={{ $json.Name }}"
            },
            {
              "name": "Phone",
              "value": "={{ $json.Phone }}"
            },
            {
              "name": "Voicemail",
              "value": "={{ $json.Voicemail }}"
            },
            {
              "name": "Day ",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2832,
        1264
      ],
      "id": "84fdcf14-f6b1-47f5-81dd-e770ed72b6a3",
      "name": "HTTP Request Fpr VM 1 Day 0"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "41zAmWMqvFwZ8VVaEfG9",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3440,
        1264
      ],
      "id": "89fbe293-74af-4fa7-b113-97f00fe4bac8",
      "name": "Get a contact1"
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3248,
        1264
      ],
      "id": "8818ffba-9f09-4e6a-bc5a-267e5c26ba56",
      "name": "Wait1",
      "webhookId": "a075a807-cc12-48c9-bdf1-009801e245d4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68b92b4c-3227-452a-889d-5b66ef59fe9c",
              "name": "Name",
              "value": "Bilal",
              "type": "string"
            },
            {
              "id": "99726aa9-fae7-4b9f-aa29-3f5c913daa20",
              "name": "Phone",
              "value": "+966576908563",
              "type": "string"
            },
            {
              "id": "229a07d4-981a-4dc2-83eb-0b3ed761b83d",
              "name": "Voicemail",
              "value": "2",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3888,
        1280
      ],
      "id": "640eb2d3-d06f-4eaf-85dd-5107ff7efa0e",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e865d018-5265-4cb0-93c6-e41bda41eee9",
              "leftValue": "={{ $json.tags && $json.tags.includes(\"voicemail_day_0_1_answered\") }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3648,
        1264
      ],
      "id": "a3eb03f9-fbe0-4308-b0b0-81132693419d",
      "name": "If VM 1 is answered"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/hooks/6YFcDHnhN2DTQoFcYZF3/webhook-trigger/50125141-a71b-45db-95e7-ab8334585df7",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=Name",
              "value": "={{ $json.Name }}"
            },
            {
              "name": "Phone",
              "value": "={{ $json.Phone }}"
            },
            {
              "name": "Voicemail",
              "value": "={{ $json.Voicemail }}"
            },
            {
              "name": "Day ",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4096,
        1280
      ],
      "id": "89a663ce-3a01-46b3-8415-49ef0c081051",
      "name": "HTTP Request For VM 2 Day"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "41zAmWMqvFwZ8VVaEfG9",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3072,
        1680
      ],
      "id": "562d1a59-37a8-4f9e-817c-2f6ec91e2919",
      "name": "Get a contact2"
    },
    {
      "parameters": {
        "amount": 15,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2880,
        1680
      ],
      "id": "94bab042-3c8e-45f7-900c-c7d6162760de",
      "name": "Wait VM 3",
      "webhookId": "a075a807-cc12-48c9-bdf1-009801e245d4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e865d018-5265-4cb0-93c6-e41bda41eee9",
              "leftValue": "={{ $json.tags && $json.tags.includes(\"voicemail_day_0_2_answered\") }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3280,
        1680
      ],
      "id": "a7b792b1-529c-4237-9df9-f62636b1963a",
      "name": "If VM 2 is answered"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/hooks/6YFcDHnhN2DTQoFcYZF3/webhook-trigger/50125141-a71b-45db-95e7-ab8334585df7",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=Name",
              "value": "={{ $json.Name }}"
            },
            {
              "name": "Phone",
              "value": "={{ $json.Phone }}"
            },
            {
              "name": "Voicemail",
              "value": "={{ $json.Voicemail }}"
            },
            {
              "name": "Day ",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3728,
        1696
      ],
      "id": "ef097748-1214-422a-b846-6e6c14433868",
      "name": "HTTP Request For VM 3 Day1"
    },
    {
      "parameters": {
        "unit": "={{\n  (() => {\n    const now = new Date();\n\n    // 7 PM UTC-7 = 02:00 UTC\n    let evening = new Date();\n    evening.setUTCHours(2, 0, 0, 0); // 02:00 UTC is 19:00 in UTC-7\n\n\n\n    return evening; // Date object, works directly in Wait node\n  })()\n}}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        592,
        2384
      ],
      "id": "79e3ddae-76e2-4a2b-851b-a8cf508f039f",
      "name": "Wait 7pm",
      "webhookId": "45b576de-92f7-442b-a09d-b8be0e6b16dd"
    },
    {
      "parameters": {
        "operation": "get",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3936,
        1696
      ],
      "id": "433ce196-0500-46a7-a22f-a9e2b0d7752f",
      "name": "Get a contact5"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "43a74f42-e9e9-4008-97a1-1f3bd082bc00",
      "name": "Check If Booked Day ",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4176,
        1696
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_5fc6a2d55ae7a6bcf3d547d1dfa7a523d0544d669a6a6787"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_3501k3yek057fzwtc3h76889sp2s"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_0401k3yetaz3e93vrdy1e42jvxv4"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        880,
        2384
      ],
      "id": "53187cae-0a38-44fe-b25a-f7db9c2055ba",
      "name": "Eleven-lab call "
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1328,
        2400
      ],
      "id": "aa9aaf46-bb89-45cb-b079-a82792786303",
      "name": "Send a message4",
      "webhookId": "12ddcc4a-222a-4c5f-842a-a9d425c632b0"
    },
    {
      "parameters": {
        "amount": 15,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1328,
        2256
      ],
      "id": "535dfb3e-79e5-4884-b0b0-b8dacd1e4f79",
      "name": "Wait2",
      "webhookId": "ce889f13-9f0e-467a-9768-c741c6daab0a"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1807673988,
          "mode": "list",
          "cachedResultName": "Outbound Calls",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=1807673988"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "To Number",
              "lookupValue": "={{ $('Get a contact If they booked').item.json.phone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1792,
        2400
      ],
      "id": "28dc3fbb-6558-4add-ba6c-b73033feb054",
      "name": "Get Summary of transcript1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\nThis is actual transcript day 0:{{ $json['Transcript Day 0'] }}.\n\nThis is summary 0:{{ $json['Summary Day 0'] }}\nNow time: {{ $now }}\n\n",
        "messages": {
          "messageValues": [
            {
              "message": "SYSTEM PROMPT:\n\nYOU ARE AN EXPERT AI CALL CLASSIFICATION AGENT TRAINED TO ANALYZE OUTBOUND CALL TRANSCRIPTS AND ROUTE THEM INTO FIVE SPECIFIC CATEGORIES FOR n8n.\n\n### INSTRUCTIONS ###\n- Carefully read the call transcript.\n- The **current time** is provided as `now_time` in ISO format (e.g., 2025-08-28T14:46:39.173+03:00). Use this as the reference for all future reminders.\n- Classify each transcript into **exactly one** of these categories:\n  1. REMINDER\n  2. LEAD-OUT (opt-out)\n  3. NOT-PICKED\n  4. BOOKED\n\n---\n\n### CATEGORIES AND RULES ###\n\n1. **REMINDER**\n- Triggered when the client requests a future follow-up.\n- Examples: \"remind me later\", \"call me tomorrow morning\", \"call me in the afternoon\", \"send me an email reminder\", \"text me a reminder\".\n- Rules:\n  - Always return `\"classification\": \"reminder\"`.\n  - Include `\"reminder_type\"` as `\"call\"`, `\"sms\"`, or `\"email\"`:\n    - `\"call\"` → user says \"call me back\" or \"call me again\"\n    - `\"sms\"` → user says \"text me\" or \"send me an sms\"\n    - `\"email\"` → user says \"email me\"\n    - Default to `\"sms\"` if not specified\n  - Include `\"time\"` as an **ISO datetime in the future**, using the provided `now_time` as reference:\n    - \"remind me in 5 hours\" → `{{ $now.plus({ hours: 5 }).toISO() }}`\n    - \"remind me tomorrow morning\" → `{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}`\n    - \"call me this afternoon\" → pick the **next future afternoon hour** relative to `now_time`, e.g., `{{ $now.set({ hour: 15, minute: 0, second: 0 }).toISO() }}`\n  - If no time is specified, return `\"time\": null`.\n\n2. **LEAD-OUT**\n- Triggered when the client explicitly does NOT want further contact.\n- Keywords: \"stop\", \"don’t call me again\", \"remove me from your list\", \"unsubscribe\", \"never call again\", \"not interested\".\n- Output: `\"classification\": \"lead-out\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n3. **NOT-PICKED**\n- Triggered if the call was not answered, when the transcript is null, went to voicemail, or user is unavailable.\n- Keywords: \"no answer\", \"not available\", \"didn’t pick\", \"busy tone\", \"left a voicemail\".\n- Output: `\"classification\": \"not-picked\"`, `\"booking_type\": null`, `\"time\": null`, `\"reminder_type\": null`.\n\n4. **BOOKED**\n- Triggered if the client agrees to a meeting or appointment.\n- Examples: \"Yes, let's book that\", \"I'll take the meeting\", \"book it for me now\".\n- Output: `\"classification\": \"booked\"`,  `\"booking_type\": sms or email`, `\"time\": null`, `\"reminder_type\": null`.\n- Rules:\n- Include `\"booking_type\"` as  `\"sms\"`, or `\"email\"`:\n    - `\"sms\"` → user says \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - `\"email\"` → user says \"email me the booking link \", \"send me booking link via sms\" or \"send me an booking link on sms\"\n    - Default to `\"email\"` if not specified\n---\n\n### EDGE CASES ###\n- If the user says both \"remind me\" and \"don't call me again\", **prioritize LEAD-OUT**.\n- If the user agrees to a meeting, **prioritize BOOKED**.\n\n---\n\n### OUTPUT FORMAT ###\nAlways return exactly this JSON structure (valid JSON, no comments):\n\n{\n  \"classification\": \"reminder | lead-out | not-picked | booked\",\n  \"time\": \"ISO datetime format if reminder includes a time, else null\",\n  \"reminder_type\": \"call | sms | email, else null\"\n  \"booking_type\": \"sms | email, else null,\n}\n\n**Notes:**\n- `\"time\"` must be **null** if not a reminder or if no time specified.\n- `\"reminder_type\"` must be **null** if not a reminder.\n- Do not include extra text, explanations, or formatting outside the JSON.\n- Use the provided `now_time` as the reference for all dynamic time calculations.\n- Here’s a recommended table in 12-hour format (LA time):\n\nPart of Day\tStarts At\tEnds At\tNotes\nMidnight\t12:00 AM\t12:59 AM\tNot suitable for clinic reminders\nEarly Morning\t6:00 AM\t7:59 AM\tBefore business hours; some early risers\nMorning\t8:00 AM\t11:59 AM\tClinic opening hours; ideal for reminders\nNoon\t12:00 PM\t12:59 PM\tMidday break; okay for reminders\nAfternoon\t1:00 PM\t4:59 PM\tActive clinic hours; good for reminders\nEvening\t5:00 PM\t7:00 PM\tClosing hours; okay for last call reminders\nNight\t7:01 PM\t11:59 PM\tNot ideal; outside typical business hours\n\nNotes / Adjustments for MedSpas & Clinics:\n\nAvoid reminders during very early morning (1–5:59 AM) or late night (after 7 PM).\n\nDefault morning reminders → 9:00 AM\n\nDefault afternoon reminders → 2:00 PM\n\nDefault evening reminders → 6:00 PM\n---\n\n### EXAMPLES ###\n\n**Example 1:**  \nTranscript: \"Can you call me tomorrow morning at 9am?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"time\": \"{{ $now.plus({ days: 1 }).set({ hour: 9, minute: 0, second: 0 }).toISO() }}\",\n  \"reminder_type\": \"call\"\n}\n\n**Example 2:**  \nTranscript: \"Please don’t contact me again via SMS.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"lead-out\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 3:**  \nTranscript: \"The number you have dialed is not available.\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"not-picked\",\n  \"booking_type\": null,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n\n**Example 5:**  \nTranscript: \"That sounds good, I'll take that meeting, send booking link via email\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"booked\",\n  \"booking_type\": email,\n  \"time\": null,\n  \"reminder_type\": null\n}\n\n**Example 6:**  \nTranscript: \"Can you send me an email reminder next week?\"  \nNow_time: \"2025-08-28T14:46:39.173+03:00\"  \nOutput:  \n{\n  \"classification\": \"reminder\",\n  \"booking_type\": null,\n  \"time\": \"{{ $now.plus({ days: 7 }).toISO() }}\",\n  \"reminder_type\": \"email\"\n}\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2144,
        2400
      ],
      "id": "53eaa309-ae07-4f4a-8c75-1b92c88e2b54",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2128,
        2608
      ],
      "id": "dd74c9f6-37a6-46e9-84f5-cd7177eb9753",
      "name": "OpenRouter Chat Model1"
    },
    {
      "parameters": {
        "operation": "delete",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3168,
        2592
      ],
      "id": "2dda072a-43f3-414c-a1b7-51e11c6dbfc3",
      "name": "Delete a contact1"
    },
    {
      "parameters": {
        "operation": "update",
        "contactId": "uh8ZXbxgiiPqAwxCXb7b",
        "updateFields": {
          "tags": "={{ $json.tags.concat(['pause-reminder']) }}"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3296,
        2352
      ],
      "id": "74e3060e-f4b9-4d3b-b136-559545469ef5",
      "name": "Update a contact tag pause-reminder1"
    },
    {
      "parameters": {
        "resume": "specificTime",
        "dateTime": "={{ $now.plus({ days: 2 }).set({ hour: 18, minute: 0, second: 0 }).toISO() }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3472,
        2352
      ],
      "id": "c484d2f8-4832-49a1-85f8-c9da93a39337",
      "name": "Wait for desired time1",
      "webhookId": "90a4e27b-c45b-4ee8-a0bc-2a62c3b13d19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3b7ab24a-966e-469e-998c-4f024b85b617",
              "leftValue": "={{ $('Code2').item.json.reminder_type }}",
              "rightValue": "call",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4064,
        2352
      ],
      "id": "1858722e-c593-4041-be9b-be166e49bdcc",
      "name": "If reminder is for Call or Email + SMS1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4784,
        2352
      ],
      "id": "9828cb25-c1db-4a45-bcef-7df82ce6481a",
      "name": "Eleven-lab calls for reminder1"
    },
    {
      "parameters": {
        "subject": "Your appointment reminder – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},\n\nAs you requested during our recent call, here’s your reminder from Yellow Rock House.\nYou can book your appointment anytime using the link below:\n\n👉 Book Your Appointment Here\n\nWe look forward to seeing you soon!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        4768,
        2544
      ],
      "id": "49873aab-859b-47cb-8dd9-f8697c0574a3",
      "name": "Send a reminder email1",
      "webhookId": "c7b5aa45-82c8-47e0-9c9b-ab9abbf6cf8a"
    },
    {
      "parameters": {
        "message": "=Hi {{leadName}}, this is a reminder from Yellow Rock House. You can book your appointment anytime here: {{bookingLink}}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        4960,
        2544
      ],
      "id": "9589f6a3-2ed0-4e37-8d84-17e2641fc0c7",
      "name": "Send an reminder sms1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3152,
        2816
      ],
      "id": "902f11e0-8e76-41f9-bdd4-2b8456382e1d",
      "name": "Eleven-lab outbound call "
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "reminder",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "620d8e74-2eeb-4b51-b590-bc64ff01c404"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reminder"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "69a956dc-77a2-4cc4-8127-a5420ab4331f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "lead-out",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "lead-out"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "817d783e-7227-415d-b1cb-6282f2a92467",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "not-picked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "not-picked"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b13a6c6c-f0fe-41c8-8ddf-df03b1a6f44f",
                    "leftValue": "={{ $json.classification }}",
                    "rightValue": "booked",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "booked"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2736,
        2368
      ],
      "id": "e607db31-0f8e-46c0-b696-9224c837cc4d",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "let aiText = null;\n\n// Try multiple possible locations for AI output\nif (items[0].json.response?.generations?.[0]?.[0]?.text) {\n    aiText = items[0].json.response.generations[0][0].text;\n} else if (items[0].json.text) {\n    aiText = items[0].json.text;\n} else {\n    throw new Error(\"AI output not found\");\n}\n\n// Remove any ```json or ``` markdown\naiText = aiText.replace(/```json\\s*/g, '').replace(/```/g, '').trim();\n\n// Try parsing JSON\nlet parsed = null;\ntry {\n    parsed = JSON.parse(aiText);\n} catch (err) {\n    throw new Error(\"Failed to parse AI JSON output\");\n}\n\n// If the AI returned the object under \"output\", use that; otherwise fallback\nconst output = parsed.output ?? parsed;\n\n// Ensure all required fields exist\nconst classification = output.classification ?? null;\nconst time = output.time ?? null;\nconst reminder_type = output.reminder_type ?? null;\nconst booking_type = output.booking_type ?? null; // <-- added field\n\n// Return properly formatted n8n object\nreturn [\n    {\n        json: {\n            classification,\n            time,\n            reminder_type,\n            booking_type // <-- included in output\n        }\n    }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2496,
        2400
      ],
      "id": "f7c76a5b-722c-4803-998c-08019d4d27e9",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3120,
        2352
      ],
      "id": "2c073935-cba1-4e3b-aa8f-76e49d9aa447",
      "name": "Get a contact18"
    },
    {
      "parameters": {
        "subject": "=Client Removal Update – {{clientName}} (Yellow Rock House)",
        "emailType": "text",
        "message": "=Hi Team,  \n\nDuring our recent outbound call, {{clientName}} requested to be removed from further communication. As per their request, we have now removed them from our contact list.  \n\nPlease ensure that:  \n - No further calls or follow-ups are made to this client.  \n - All records in CRM/n8n are updated accordingly.  \n - Any scheduled reminders or campaigns related to this client are canceled.  \n\nThanks for keeping everything up to date and respecting client preferences.  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3424,
        2592
      ],
      "id": "ae28db0e-5276-4682-8886-b3fcad139f8c",
      "name": "Send a message5",
      "webhookId": "55b50f56-8e90-4d7b-acef-9dd4f6ce08f7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        3456,
        3200
      ],
      "id": "cc29888b-0a1d-4362-81f5-b0afa59920cd",
      "name": "Thanks for booking sms1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f9ccb6d-d137-48eb-8e64-10511fa5ec12",
              "leftValue": "={{ $json.booking_type }}",
              "rightValue": "sms",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3152,
        3232
      ],
      "id": "98d03043-bbce-47f2-9927-02e453341762",
      "name": "If2"
    },
    {
      "parameters": {
        "subject": "=Booking link as promised – Yellow Rock House",
        "emailType": "text",
        "message": "=Hi {{leadName}},  \n\nThank you for agreeing to book your appointment with Yellow Rock House. \nYou can confirm your slot anytime using the link below:  👉 Book Your Appointment Here  \n\nWe appreciate your time and look forward to seeing you soon!  \n\nBest regards, \nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3472,
        3392
      ],
      "id": "857a1246-d97c-45d3-b9ce-d7c2af8c25eb",
      "name": "Send a message6",
      "webhookId": "abda3e9f-8b31-419a-9e49-84b4796d630c"
    },
    {
      "parameters": {
        "subject": "=New Lead Ready to Book – {{leadName}}",
        "emailType": "text",
        "message": "=Hi Team,\n\nWe have a new lead who has agreed on the call to book an appointment with Yellow Rock House.\n\nLead Name: {{leadName}}\nBooking Link: {{bookingLink}}\n\nPlease make sure to follow up and assist them promptly.\n\nThanks for your attention!\n\nBest regards,\nYellow Rock House Team",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        4032,
        3312
      ],
      "id": "5792c083-a840-4778-ae08-a107055abfae",
      "name": "Notifying Team1",
      "webhookId": "6385279f-f8d4-4a19-a7d7-c040936992c4"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Lead data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Reminder": "yes",
            "Phone": "={{ $json.phone }}"
          },
          "matchingColumns": [
            "Phone"
          ],
          "schema": [
            {
              "id": "Contact ID",
              "displayName": "Contact ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Clinic Name",
              "displayName": "Clinic Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Time spam",
              "displayName": "Time spam",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Reminder",
              "displayName": "Reminder",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Follow up day",
              "displayName": "Follow up day",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        3648,
        2352
      ],
      "id": "b8cfa252-6b66-4ae4-8d76-c8426283f684",
      "name": "Last Conversation1"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        4336,
        2336
      ],
      "id": "93ee4db8-b839-45c1-af0d-4744a4320c13",
      "name": "Get a contact6"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=uh8ZXbxgiiPqAwxCXb7b",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        4336,
        2528
      ],
      "id": "af0b318c-d574-46f3-9485-d089ce4c9b00",
      "name": "Get a contact7"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "62f59b34-4149-4651-8e8d-e7f93ced5741",
      "name": "Check If Booked Day 3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4544,
        2336
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.tags && ($json.tags.includes('booked') || $json.tags.includes('booking-form-submitted')) }}",
              "value2": true
            }
          ]
        }
      },
      "id": "67c1889d-e979-4706-84e2-4bd7eb7fa788",
      "name": "Check If Booked Day 4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4512,
        2528
      ],
      "notes": "If booked, end workflow immediately"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68b92b4c-3227-452a-889d-5b66ef59fe9c",
              "name": "Name",
              "value": "Bilal",
              "type": "string"
            },
            {
              "id": "99726aa9-fae7-4b9f-aa29-3f5c913daa20",
              "name": "Phone",
              "value": "+966576908563",
              "type": "string"
            },
            {
              "id": "229a07d4-981a-4dc2-83eb-0b3ed761b83d",
              "name": "Voicemail",
              "value": "4",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3648,
        2656
      ],
      "id": "99043ac4-09a1-4583-a235-de66789a3d17",
      "name": "Edit Fields for VM 4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/hooks/6YFcDHnhN2DTQoFcYZF3/webhook-trigger/50125141-a71b-45db-95e7-ab8334585df7",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=Name",
              "value": "={{ $json.Name }}"
            },
            {
              "name": "Phone",
              "value": "={{ $json.Phone }}"
            },
            {
              "name": "Voicemail",
              "value": "={{ $json.Voicemail }}"
            },
            {
              "name": "Day ",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3888,
        2640
      ],
      "id": "06b078e7-3740-4745-8540-5803653d781a",
      "name": "HTTP Request For VM 1 Day"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "start-elevenlab.io-sequence",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "51f84372-b66b-4774-ae9b-156c875559cd",
      "name": "ElevenLab 14 days Call + SMS + VM",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        144,
        592
      ],
      "webhookId": "3aa9675d-c692-4cc2-aae1-464e19f6b9c8",
      "notes": "Triggered from VSL workflow for leads that don't book after 3 minutes"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "contact_id",
              "value": "=4b6pAJRlE7IH539DZZBq"
            },
            {
              "name": "firstName",
              "value": "={{ $json.body.first_name }}"
            },
            {
              "name": "phone",
              "value": "={{ $json.body.phone }}"
            },
            {
              "name": "sequence_day",
              "value": "0"
            },
            {
              "name": "booking_link",
              "value": "https://bit.ly/3A51SCONNECT"
            }
          ]
        },
        "options": {}
      },
      "id": "45acb359-5d84-48c1-bdb7-c9f1cb6233ba",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        688,
        592
      ],
      "notes": "Initialize tracking variables for 14-day AI call sequence"
    },
    {
      "parameters": {
        "operation": "get",
        "contactId": "=41zAmWMqvFwZ8VVaEfG9",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        1104,
        368
      ],
      "id": "c4cbfc82-df09-4c5b-bc4b-bfbdda4f9f4f",
      "name": "Get a contact If they booked"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk",
          "mode": "list",
          "cachedResultName": "Data Base of lead",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/191W_RrLTYDOM8bgXodL5hpyiusJ7vlTHPOVYFKzEOOk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Follow up day": "Day 0",
            "Contact ID": "={{ $json.id }}"
          },
          "matchingColumns": [
            "Contact ID"
          ],
          "schema": [
            {
              "id": "Contact ID",
              "displayName": "Contact ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Clinic Name",
              "displayName": "Clinic Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Time spam",
              "displayName": "Time spam",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Follow up day",
              "displayName": "Follow up day",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1888,
        592
      ],
      "id": "4308fb1a-c046-45ea-8845-16488b1df8d2",
      "name": "Add the follow up day 0 in column"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d65c0a3-c3e1-430b-a9e3-661f26df93c0",
              "leftValue": "={{ $json.success }}",
              "rightValue": "True",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2464,
        592
      ],
      "id": "c73b8579-1bdd-44ec-803a-3d29669bb1a0",
      "name": "If Call Success or Not"
    },
    {
      "parameters": {
        "emailType": "text",
        "message": "=Hi Team,\n\nThe scheduled call with {{lead_name}} on {{day_followup}} was unsuccessful. Please note this update and advise on the next steps or rescheduling.\n\nThank you,",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2768,
        608
      ],
      "id": "59f6e5ab-3ccd-447f-a861-713c09e630fa",
      "name": "Send a message to notify team of failur",
      "webhookId": "12ddcc4a-222a-4c5f-842a-a9d425c632b0"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3392,
        832
      ],
      "id": "b95b1ed5-4c83-4484-beb7-196390ff0d84",
      "name": "Remove pause-reminder tag from contact"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        3584,
        1056
      ],
      "id": "1691a3f2-b899-42f6-91e6-3903f7871f74",
      "name": "Remove pause-reminder tag from contact1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/convai/twilio/outbound-call",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_e4ae676140a1d5d11015e296faa7596fd26012966272b96d"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_id",
              "value": "agent_1801k38s4rpkfdjbm39mpqe3s2hd"
            },
            {
              "name": "agent_phone_number_id",
              "value": "phnum_3701k39wsmeef54t2r60m9j9eev0"
            },
            {
              "name": "to_number",
              "value": "+966576908563"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1552,
        1296
      ],
      "id": "d9d6afd5-b3e2-4d8e-b044-3a5f3af91054",
      "name": "Eleven-lab outbound call 2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d65c0a3-c3e1-430b-a9e3-661f26df93c0",
              "leftValue": "={{ $json.success }}",
              "rightValue": "True",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1136,
        2384
      ],
      "id": "1db3ddb8-7674-4192-babb-ac9bd31e1efe",
      "name": "If Called Successed"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        5040,
        2336
      ],
      "id": "87d6188b-3670-403a-a3e3-2362263a7026",
      "name": "Remove pause-reminder tag from contact2"
    },
    {
      "parameters": {
        "operation": "update",
        "updateFields": {
          "tags": ""
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 2,
      "position": [
        5168,
        2560
      ],
      "id": "bbc8f46f-f112-47e9-9aec-022f5a0af028",
      "name": "Remove pause-reminder tag from contact3"
    },
    {
      "parameters": {
        "content": "# Day 0 AI Call+Messages+SMS Morning Workflow",
        "height": 2000,
        "width": 5536
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        64,
        208
      ],
      "id": "eb41766e-fc7d-49b2-948c-6071f5ff26a5",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Evening Workflow",
        "height": 1648,
        "width": 5600,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        64,
        2224
      ],
      "id": "53cc3881-d4fd-45c9-ba33-79d7ef7e6a22",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day-1",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3120,
        592
      ],
      "id": "fbf08957-2c85-45c4-95ac-6c37eff71b64",
      "name": "HTTP Request for Day 1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        2544
      ],
      "id": "f6543ab1-9ff5-493a-a591-51c83b02d248",
      "name": "HTTP Request for Day 6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1568,
        2592
      ],
      "id": "6e625f2a-7307-488b-92a1-826dad8c92f1",
      "name": "HTTP Request for Day 8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5328,
        2336
      ],
      "id": "c5298ba3-b8a0-46fe-b1a9-5c49a2c907b4",
      "name": "HTTP Request for Day 9"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5376,
        2560
      ],
      "id": "f1df919f-2a01-4666-8388-75be76684abd",
      "name": "HTTP Request for Day 10"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4160,
        2592
      ],
      "id": "69d578f1-ce73-4555-a941-d6a05117516b",
      "name": "HTTP Request for Day 11"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "id": "894e394a-3fec-45de-ac7e-f545c0816156",
      "name": "Wait 2 Minutes1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        3568,
        2832
      ],
      "webhookId": "ec5b365e-e056-4d31-a6b7-7879c6d50700",
      "notes": "Wait 2 minutes between call and voicemail/SMS"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3472,
        3024
      ],
      "id": "203d697f-9454-44e0-8b41-7d96b12852a5",
      "name": "Send a message7",
      "webhookId": "12ddcc4a-222a-4c5f-842a-a9d425c632b0"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        3792,
        2848
      ],
      "id": "49c90b72-3e71-4ce9-8480-eb2e43de94cf",
      "name": "Get transcript to check1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9348d1fa-b980-4ebf-a773-8ea461b73f76",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4016,
        2832
      ],
      "id": "d294a8f2-12c4-43b8-81fc-31859fa04317",
      "name": "If transcript  is empty1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d65c0a3-c3e1-430b-a9e3-661f26df93c0",
              "leftValue": "={{ $json.success }}",
              "rightValue": "True",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3344,
        2816
      ],
      "id": "46beb046-a419-47a6-ab82-0cc869059b53",
      "name": "If call success2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68b92b4c-3227-452a-889d-5b66ef59fe9c",
              "name": "Name",
              "value": "Bilal",
              "type": "string"
            },
            {
              "id": "99726aa9-fae7-4b9f-aa29-3f5c913daa20",
              "name": "Phone",
              "value": "+966576908563",
              "type": "string"
            },
            {
              "id": "229a07d4-981a-4dc2-83eb-0b3ed761b83d",
              "name": "Voicemail",
              "value": "4",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4256,
        2816
      ],
      "id": "26f9502a-8186-4755-beff-c87c0d8bdf17",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "from": "+16812026276",
        "to": "+18777804236",
        "message": "=Hi! 👋 In case if you miss the link, here is the link:\n\nhttps://api.leadconnectorhq.com/widget/booking/W8QcIllkRPKyS76yvPEZ\n\nPlease book a time that works for you using the link.\n\nLooking forward to connecting with you!",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        4224,
        3024
      ],
      "id": "adbbe414-c6fd-4176-b8e9-bbd9a1bce80c",
      "name": "Send an SMS Booking link sms2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/hooks/6YFcDHnhN2DTQoFcYZF3/webhook-trigger/50125141-a71b-45db-95e7-ab8334585df7",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=Name",
              "value": "={{ $json.Name }}"
            },
            {
              "name": "Phone",
              "value": "={{ $json.Phone }}"
            },
            {
              "name": "Voicemail",
              "value": "={{ $json.Voicemail }}"
            },
            {
              "name": "Day ",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4480,
        2816
      ],
      "id": "a270ee5a-8234-4b13-9085-f87d53b5722e",
      "name": "HTTP Request Fpr VM 1 Day "
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4480,
        3040
      ],
      "id": "1815f1b3-8113-4384-be5d-29c91278877d",
      "name": "HTTP Request for Day 7"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4720,
        2816
      ],
      "id": "dbb7554c-09d2-4697-9008-99fea7aa8e5b",
      "name": "HTTP Request for Day 12"
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "id": "1f25e991-f515-4015-b04f-bf18250b0332",
      "name": "Wait 5 Minute",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        912,
        592
      ],
      "webhookId": "203a8dd6-e8c1-4d7b-980f-d29471784447",
      "notes": "Day 0: Wait 1 minute after sequence initialization"
    },
    {
      "parameters": {
        "amount": 20,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2640,
        336
      ],
      "id": "31c4b0c2-d519-4a99-8a72-cedd5906bcc0",
      "name": "Wait 15 mins",
      "webhookId": "ce889f13-9f0e-467a-9768-c741c6daab0a"
    },
    {
      "parameters": {
        "jsCode": "let aiText = null;\n\n// Try multiple possible locations for AI output\nif (items[0].json.response?.generations?.[0]?.[0]?.text) {\n    aiText = items[0].json.response.generations[0][0].text;\n} else if (items[0].json.text) {\n    aiText = items[0].json.text;\n} else {\n    throw new Error(\"AI output not found\");\n}\n\n// Remove any ```json or ``` markdown\naiText = aiText.replace(/```json\\s*/g, '').replace(/```/g, '').trim();\n\n// Try parsing JSON\nlet parsed = null;\ntry {\n    parsed = JSON.parse(aiText);\n} catch (err) {\n    throw new Error(\"Failed to parse AI JSON output\");\n}\n\n// If the AI returned the object under \"output\", use that; otherwise fallback\nconst output = parsed.output ?? parsed;\n\n// Ensure all required fields exist\nconst classification = output.classification ?? null;\nconst time = output.time ?? null;\nconst reminder_type = output.reminder_type ?? null;\nconst booking_type = output.booking_type ?? null; // <-- added field\n\n// Return properly formatted n8n object\nreturn [\n    {\n        json: {\n            classification,\n            time,\n            reminder_type,\n            booking_type // <-- included in output\n        }\n    }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        896,
        880
      ],
      "id": "c86a6764-14e8-4b93-810d-1df09f8b643d",
      "name": "Code to add the tag"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day-1",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3808,
        832
      ],
      "id": "dc568d22-5069-4c59-a535-8658b401170f",
      "name": "Request for Day 1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day-1",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2688,
        1552
      ],
      "id": "fb32610d-2d6f-4b23-bc0e-74d81b74b3ec",
      "name": "HTTP Request for Next Day 1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day-1",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3904,
        1056
      ],
      "id": "3238b4c1-8c52-4fc8-bb0d-390b284d8bbb",
      "name": "HTTP for Day 1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        1264
      ],
      "id": "3a91fd62-3ff4-47a5-ae90-afc0bae9eea7",
      "name": "HTTP for Next Day 1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://yellowrockhouse.app.n8n.cloud/webhook-test/next-day-1",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3536,
        1536
      ],
      "id": "113fcdcd-d1cb-4cd4-88a3-28bfe845ec6e",
      "name": "Request for Next Day 1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68b92b4c-3227-452a-889d-5b66ef59fe9c",
              "name": "Name",
              "value": "Bilal",
              "type": "string"
            },
            {
              "id": "99726aa9-fae7-4b9f-aa29-3f5c913daa20",
              "name": "Phone",
              "value": "+966576908563",
              "type": "string"
            },
            {
              "id": "229a07d4-981a-4dc2-83eb-0b3ed761b83d",
              "name": "Voicemail",
              "value": "3",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3520,
        1696
      ],
      "id": "f3a12df2-b44e-4f10-8128-d34383085aa0",
      "name": "Edit Field for VM 3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "b617445f-c76a-4f9c-b227-c092be24b98a",
              "leftValue": "={{ $now < $now.set({ hour: 19, minute: 0, second: 0, millisecond: 0 }) ? true : false }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        288,
        2480
      ],
      "id": "5ca14d54-e8cc-4251-b16c-6fe632b52d4f",
      "name": "If True for Time passed"
    },
    {
      "parameters": {
        "content": "✅ Explanation:\n\n$now < 7 PM → true (time not passed yet)\n\n$now >= 7 PM → false (time passed)",
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        2448
      ],
      "id": "22de3158-d01e-425e-9ee7-c975d8a418d4",
      "name": "Sticky Note1"
    }
  ],
  "connections": {
    "Check If Booked Day 0": {
      "main": [
        [],
        [
          {
            "node": "Add the follow up day 0 in column",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Check If Booked Day 0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tracking Response": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab call 1": {
      "main": [
        [
          {
            "node": "If Call Success or Not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 Minutes": {
      "main": [
        [
          {
            "node": "Get transcript to check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an SMS Booking link sms": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Summary of transcript": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code to add the tag",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Delete a contact": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a contact tag pause-reminder": {
      "main": [
        [
          {
            "node": "Wait for desired time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for desired time": {
      "main": [
        [
          {
            "node": "Last Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If reminder is for Call or Email + SMS": {
      "main": [
        [
          {
            "node": "Get a contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a contact4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab calls for reminder": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a reminder email": {
      "main": [
        [
          {
            "node": "Send an reminder sms",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an reminder sms": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Get a contact17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete a contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Eleven-lab outbound call 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact17": {
      "main": [
        [
          {
            "node": "Update a contact tag pause-reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thanks for booking sms": {
      "main": [
        [
          {
            "node": "Notifying Team",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Thanks for booking sms",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message3": {
      "main": [
        [
          {
            "node": "Notifying Team",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last Conversation": {
      "main": [
        [
          {
            "node": "If reminder is for Call or Email + SMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact": {
      "main": [
        [
          {
            "node": "Check If Booked Day 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact4": {
      "main": [
        [
          {
            "node": "Check If Booked Day 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 1": {
      "main": [
        [],
        [
          {
            "node": "Eleven-lab calls for reminder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 2": {
      "main": [
        [],
        [
          {
            "node": "Send a reminder email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message2": {
      "main": [
        [
          {
            "node": "Wait 2 Minutes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get transcript to check": {
      "main": [
        [
          {
            "node": "If transcript  is empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If transcript  is empty": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send an SMS Booking link sms1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If call success": {
      "main": [
        [
          {
            "node": "Wait 2 Minutes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request Fpr VM 1 Day 0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an SMS Booking link sms1": {
      "main": [
        [
          {
            "node": "HTTP Request for Next Day 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request Fpr VM 1 Day 0": {
      "main": [
        [
          {
            "node": "Send an SMS Booking link sms",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact1": {
      "main": [
        [
          {
            "node": "If VM 1 is answered",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Get a contact1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "HTTP Request For VM 2 Day",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If VM 1 is answered": {
      "main": [
        [
          {
            "node": "HTTP for Next Day 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request For VM 2 Day": {
      "main": [
        [
          {
            "node": "Wait VM 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact2": {
      "main": [
        [
          {
            "node": "If VM 2 is answered",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait VM 3": {
      "main": [
        [
          {
            "node": "Get a contact2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If VM 2 is answered": {
      "main": [
        [
          {
            "node": "Request for Next Day 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Field for VM 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request For VM 3 Day1": {
      "main": [
        [
          {
            "node": "Get a contact5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 7pm": {
      "main": [
        [
          {
            "node": "Eleven-lab call ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact5": {
      "main": [
        [
          {
            "node": "Check If Booked Day ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day ": {
      "main": [
        [],
        [
          {
            "node": "If True for Time passed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab call ": {
      "main": [
        [
          {
            "node": "If Called Successed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message4": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Get Summary of transcript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Summary of transcript1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Delete a contact1": {
      "main": [
        [
          {
            "node": "Send a message5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a contact tag pause-reminder1": {
      "main": [
        [
          {
            "node": "Wait for desired time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for desired time1": {
      "main": [
        [
          {
            "node": "Last Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If reminder is for Call or Email + SMS1": {
      "main": [
        [
          {
            "node": "Get a contact6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a contact7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab calls for reminder1": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a reminder email1": {
      "main": [
        [
          {
            "node": "Send an reminder sms1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an reminder sms1": {
      "main": [
        [
          {
            "node": "Remove pause-reminder tag from contact3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab outbound call ": {
      "main": [
        [
          {
            "node": "If call success2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get a contact18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete a contact1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Eleven-lab outbound call ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact18": {
      "main": [
        [
          {
            "node": "Update a contact tag pause-reminder1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thanks for booking sms1": {
      "main": [
        [
          {
            "node": "Notifying Team1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Thanks for booking sms1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message6": {
      "main": [
        [
          {
            "node": "Notifying Team1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Last Conversation1": {
      "main": [
        [
          {
            "node": "If reminder is for Call or Email + SMS1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact6": {
      "main": [
        [
          {
            "node": "Check If Booked Day 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact7": {
      "main": [
        [
          {
            "node": "Check If Booked Day 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 3": {
      "main": [
        [],
        [
          {
            "node": "Eleven-lab calls for reminder1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Booked Day 4": {
      "main": [
        [],
        [
          {
            "node": "Send a reminder email1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields for VM 4": {
      "main": [
        [
          {
            "node": "HTTP Request For VM 1 Day",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request For VM 1 Day": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLab 14 days Call + SMS + VM": {
      "main": [
        [
          {
            "node": "Tracking Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Wait 5 Minute",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a contact If they booked": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add the follow up day 0 in column": {
      "main": [
        [
          {
            "node": "Eleven-lab call 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Call Success or Not": {
      "main": [
        [
          {
            "node": "Wait 15 mins",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message to notify team of failur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message to notify team of failur": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact": {
      "main": [
        [
          {
            "node": "Request for Day 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact1": {
      "main": [
        [
          {
            "node": "HTTP for Day 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eleven-lab outbound call 2": {
      "main": [
        [
          {
            "node": "If call success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Called Successed": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact2": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove pause-reminder tag from contact3": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 Minutes1": {
      "main": [
        [
          {
            "node": "Get transcript to check1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message7": {
      "main": [
        [
          {
            "node": "Wait 2 Minutes1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get transcript to check1": {
      "main": [
        [
          {
            "node": "If transcript  is empty1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If transcript  is empty1": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send an SMS Booking link sms2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If call success2": {
      "main": [
        [
          {
            "node": "Wait 2 Minutes1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a message7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "HTTP Request Fpr VM 1 Day ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an SMS Booking link sms2": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request Fpr VM 1 Day ": {
      "main": [
        [
          {
            "node": "HTTP Request for Day 12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5 Minute": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get a contact If they booked",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 15 mins": {
      "main": [
        [
          {
            "node": "Get Summary of transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code to add the tag": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Field for VM 3": {
      "main": [
        [
          {
            "node": "HTTP Request For VM 3 Day1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If True for Time passed": {
      "main": [
        [
          {
            "node": "Wait 7pm",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request for Day 6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "Eleven-lab calls for reminder": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ],
    "Eleven-lab calls for reminder1": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ],
    "Eleven-lab outbound call ": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ],
    "Eleven-lab outbound call 2": [
      {
        "success": true,
        "message": "b'Success'",
        "conversation_id": "conv_6401k3hqxwvne73869xnzjrym1ra",
        "callSid": "CA4ff9271179d8e9f529bc7d4b5606ec0b"
      }
    ]
  },
  "meta": {
    "instanceId": "1a6100b2e52ae3c290d86af3a0507cd2e67a0cc99a26544ed00345df21ae1dd0"
  }
}
